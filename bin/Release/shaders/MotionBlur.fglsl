   #version 440 core

   layout (binding = 0) uniform sampler2D gFinalImage; // texture we're blurring
   layout (binding = 1) uniform sampler2D gExtraComponents; // velocity buffer
   
   uniform float uVelocityScale;

   layout(location = 0) out vec4 oResult;

   const int MAX_SAMPLES = 50; //15
   void main(void) {
      vec2 texelSize = 1.0 / vec2(textureSize(gFinalImage, 0));
      vec2 screenTexCoords = gl_FragCoord.xy * texelSize;

      vec2 velocity = texture(gExtraComponents, screenTexCoords).ba;
      velocity *= uVelocityScale;

      float speed = length(velocity / texelSize);
      int nSamples = clamp(int(speed), 1, MAX_SAMPLES);

      oResult = texture(gFinalImage, screenTexCoords);
      for (int i = 1; i < nSamples; ++i) {
         vec2 offset = velocity * (float(i) / float(nSamples - 1) - 0.5);
         oResult += texture(gFinalImage, screenTexCoords + offset);
      }
      oResult /= max(1.0, float(nSamples));
   }