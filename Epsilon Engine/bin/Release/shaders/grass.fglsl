#version 330 core

uniform sampler2D grassTex;

in vec2 UV;
in vec3 FragPos;
in vec3 wFragPos;
in vec3 Normal;

layout(location = 0) out vec3 gAlbedoSpec;
layout(location = 1) out vec3 gPosition;
layout(location = 2) out vec4 gExpensiveNormal;
layout(location = 3) out float gDepth;
layout(location = 4) out vec4 gExtraComponents; 
layout(location = 5) out vec3 gLightAccumulation;

float NEAR = 0.1;
float FAR = 3000.0;

float LinearizeDepth(float depth)
{
    float z = depth * 2.0 - 1.0; // Back to NDC
    return ((2.0 * NEAR * FAR) / (FAR + NEAR - z * (FAR - NEAR)));
}

void main()
{

    vec4 diff = texture(grassTex, UV);

    if(diff.a < 0.3)
        discard;

    gAlbedoSpec.rgb = diff.rgb;
    gPosition = FragPos;
    gExpensiveNormal.rgb = vec3(0,1,0);
    gExpensiveNormal.a = 1.0;
    gDepth = gl_FragCoord.z;
    gExtraComponents = vec4(0.0, 0.0, 0.0, 0.0); 

}
