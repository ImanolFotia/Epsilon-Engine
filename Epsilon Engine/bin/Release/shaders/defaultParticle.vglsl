#version 440 core

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 texCoords;
layout(location = 2) in vec3 normal;
layout(location = 3) in mat4 positions;

uniform mat4 MVP;

uniform mat4 view;
uniform mat4 PrevView;
uniform mat4 projection;
uniform float time;
uniform vec3 cameraRight; 
uniform vec3 cameraUp;

out vec4 PrevPosition;
out vec4 Position;

out vec2 UV;
out vec3 FragPos;
out vec3 wFragPos;
out vec3 Normal;

void main()
{
    vec3 vertexPosition =
    vec3(positions[0][3], positions[1][3],positions[2][3])
    + cameraRight * position.x * 1.0
    + cameraUp * position.y * 1.0;

    gl_Position = projection * view * positions * vec4(vertexPosition, 1.0) ;

    vec3 newPosition = vec4(positions * vec4(vertexPosition, 1.0)).xyz;

    wFragPos = vec3(positions * vec4(newPosition, 1.0f));

    FragPos = vec3(view * vec4(wFragPos, 1.0f));
    Position = gl_Position;
    PrevPosition = projection * PrevView * positions * vec4(position, 1.0);

    UV = texCoords;//-position.xy + vec2(0.5, 0.5);
    Normal = normalize(normal * mat3(inverse(view)));
}