#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = %cd%

CC = gcc.exe
CXX = g++.exe
AR = ar.exe
LD = g++.exe
WINDRES = windres.exe

INC = 
CFLAGS = -Wall -fexceptions
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_DEBUG = $(INC) -Ideppend\glew\include -Ideppend\glfw\include -Ideppend\glm -Ideppend\assimp\include -Iinclude -Ideppend\SOIL\src -Ideppend\FreeType2\include -Ideppend\ini\include -Ideppend\bullet3-2.83.7\src -Ideppend\openal-soft-1.17.2-bin\include
CFLAGS_DEBUG = $(CFLAGS) -g
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR) -Ldeppend\glew\lib -Ldeppend\glfw\lib -Ldeppend\SOIL\lib -Ldeppend\FreeType2\lib -Ldeppend\ini\lib
LIB_DEBUG = $(LIB)-lSOIL -lopengl32 deppend\glfw\lib\glfw3dll.a deppend\assimp\lib\assimp_release-dll_win32\assimp.lib -lfreetype240 -linih -lglew32.dll -lmingw32 deppend\bullet3-2.83.7\lib\libBulletCollision.a deppend\bullet3-2.83.7\lib\libBulletDynamics.a deppend\bullet3-2.83.7\lib\libLinearMath.a
LDFLAGS_DEBUG = $(LDFLAGS) -static -static-libgcc -static-libstdc++
OBJDIR_DEBUG = obj\\Debug
DEP_DEBUG = 
OUT_DEBUG = bin\\Debug\\Epsilon\ Engine.exe

INC_RELEASE = $(INC) -Ideppend\glew-2.0.0\include -Ideppend\glfw-3.2.bin.WIN32\include -Ideppend\glm -Ideppend -Ideppend\SOIL\src -Ideppend\FreeType2\include -Ideppend\ini\include -Iinclude -Ideppend\bullet-2.82-r2704\src -Ideppend\openal-soft-master\openal-soft-master\include -Ideppend\stb-master
CFLAGS_RELEASE = $(CFLAGS) -march=core2 -O3 -std=c++11 -fopenmp -std=c++14
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR) -Ldeppend\glew-2.0.0\lib -Ldeppend\SOIL\lib -Ldeppend\FreeType2\lib -Ldeppend\ini\lib -Ldeppend\openal-soft-1.17.2-bin\libs\Win32 -LC:\Program Files (x86)\CodeBlocks\MinGW\lib\gcc\mingw32\4.9.2
LIB_RELEASE = $(LIB)deppend\bullet-2.82-r2704\lib\libBulletSoftBody.a deppend\bullet-2.82-r2704\lib\libBulletDynamics.a deppend\bullet-2.82-r2704\lib\libBulletCollision.a deppend\bullet-2.82-r2704\lib\libLinearMath.a
LDFLAGS_RELEASE = $(LDFLAGS) deppend\SOIL\lib\libSOIL.a deppend\glfw-3.2.bin.WIN32\lib-mingw\libglfw3.a -lopengl32 deppend\FreeType2\lib\libfreetype240.a deppend\ini\lib\libinih.a deppend\glew-2.0.0\lib\libglew32.dll.a -lgdi32 deppend\openal-soft-master\openal-soft-master\build\libOpenAL32.dll.a -fopenmp -lgomp
OBJDIR_RELEASE = obj\\Release
DEP_RELEASE = 
OUT_RELEASE = bin\\Release\\Epsilon\ Engine.exe

OBJ_DEBUG = $(OBJDIR_DEBUG)\\src\\Audio\\Audio.o $(OBJDIR_DEBUG)\\src\\BSP.o $(OBJDIR_DEBUG)\\src\\BSPFace.o $(OBJDIR_DEBUG)\\src\\Camera.o $(OBJDIR_DEBUG)\\src\\EntityTemplate.o $(OBJDIR_DEBUG)\\src\\PostProcess\\SSAO.o $(OBJDIR_DEBUG)\\src\\PostProcess\\ScreenSpaceReflections.o $(OBJDIR_DEBUG)\\src\\ProgramData.o $(OBJDIR_DEBUG)\\src\\ResourceManager.o $(OBJDIR_DEBUG)\\src\\Scene.o $(OBJDIR_DEBUG)\\src\\Shader.o $(OBJDIR_DEBUG)\\src\\ShadowMapping.o $(OBJDIR_DEBUG)\\src\\Skybox.o $(OBJDIR_DEBUG)\\src\\SphericalHarmonics.o $(OBJDIR_DEBUG)\\src\\Sun.o $(OBJDIR_DEBUG)\\src\\Terrain.o $(OBJDIR_DEBUG)\\src\\Water.o $(OBJDIR_DEBUG)\\src\\cubemapRenderer.o $(OBJDIR_DEBUG)\\src\\main.o $(OBJDIR_DEBUG)\\src\\resources.o $(OBJDIR_DEBUG)\\src\\sys\\KeyBoard.o $(OBJDIR_DEBUG)\\src\\sys\\filesystem.o $(OBJDIR_DEBUG)\\src\\Epsilon.o $(OBJDIR_DEBUG)\\src\\Frustum.o $(OBJDIR_DEBUG)\\src\\Image\\DDS.o $(OBJDIR_DEBUG)\\src\\MD5_Anim.o $(OBJDIR_DEBUG)\\src\\MD5_Model.o $(OBJDIR_DEBUG)\\src\\Mesh.o $(OBJDIR_DEBUG)\\src\\Model.o $(OBJDIR_DEBUG)\\src\\Particle.o $(OBJDIR_DEBUG)\\src\\Patch.o $(OBJDIR_DEBUG)\\src\\Physics\\ClothPhysicObject.o $(OBJDIR_DEBUG)\\src\\Physics\\CubePhysicObject.o $(OBJDIR_DEBUG)\\src\\Physics\\Physics.o $(OBJDIR_DEBUG)\\src\\Physics\\SpherePhysicObject.o $(OBJDIR_DEBUG)\\src\\Physics\\TriangleMeshPhysicObject.o $(OBJDIR_DEBUG)\\src\\Picking.o $(OBJDIR_DEBUG)\\src\\Player.o $(OBJDIR_DEBUG)\\src\\PostProcess.o $(OBJDIR_DEBUG)\\src\\PostProcess\\MotionBlur.o

OBJ_RELEASE = $(OBJDIR_RELEASE)\\src\\Audio\\Audio.o $(OBJDIR_RELEASE)\\src\\BSP.o $(OBJDIR_RELEASE)\\src\\BSPFace.o $(OBJDIR_RELEASE)\\src\\Camera.o $(OBJDIR_RELEASE)\\src\\EntityTemplate.o $(OBJDIR_RELEASE)\\src\\PostProcess\\SSAO.o $(OBJDIR_RELEASE)\\src\\PostProcess\\ScreenSpaceReflections.o $(OBJDIR_RELEASE)\\src\\ProgramData.o $(OBJDIR_RELEASE)\\src\\ResourceManager.o $(OBJDIR_RELEASE)\\src\\Scene.o $(OBJDIR_RELEASE)\\src\\Shader.o $(OBJDIR_RELEASE)\\src\\ShadowMapping.o $(OBJDIR_RELEASE)\\src\\Skybox.o $(OBJDIR_RELEASE)\\src\\SphericalHarmonics.o $(OBJDIR_RELEASE)\\src\\Sun.o $(OBJDIR_RELEASE)\\src\\Terrain.o $(OBJDIR_RELEASE)\\src\\Water.o $(OBJDIR_RELEASE)\\src\\cubemapRenderer.o $(OBJDIR_RELEASE)\\src\\main.o $(OBJDIR_RELEASE)\\src\\resources.o $(OBJDIR_RELEASE)\\src\\sys\\KeyBoard.o $(OBJDIR_RELEASE)\\src\\sys\\filesystem.o $(OBJDIR_RELEASE)\\src\\Epsilon.o $(OBJDIR_RELEASE)\\src\\Frustum.o $(OBJDIR_RELEASE)\\src\\Image\\DDS.o $(OBJDIR_RELEASE)\\src\\MD5_Anim.o $(OBJDIR_RELEASE)\\src\\MD5_Model.o $(OBJDIR_RELEASE)\\src\\Mesh.o $(OBJDIR_RELEASE)\\src\\Model.o $(OBJDIR_RELEASE)\\src\\Particle.o $(OBJDIR_RELEASE)\\src\\Patch.o $(OBJDIR_RELEASE)\\src\\Physics\\ClothPhysicObject.o $(OBJDIR_RELEASE)\\src\\Physics\\CubePhysicObject.o $(OBJDIR_RELEASE)\\src\\Physics\\Physics.o $(OBJDIR_RELEASE)\\src\\Physics\\SpherePhysicObject.o $(OBJDIR_RELEASE)\\src\\Physics\\TriangleMeshPhysicObject.o $(OBJDIR_RELEASE)\\src\\Picking.o $(OBJDIR_RELEASE)\\src\\Player.o $(OBJDIR_RELEASE)\\src\\PostProcess.o $(OBJDIR_RELEASE)\\src\\PostProcess\\MotionBlur.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	cmd /c if not exist bin\\Debug md bin\\Debug
	cmd /c if not exist $(OBJDIR_DEBUG)\\src\\Audio md $(OBJDIR_DEBUG)\\src\\Audio
	cmd /c if not exist $(OBJDIR_DEBUG)\\src md $(OBJDIR_DEBUG)\\src
	cmd /c if not exist $(OBJDIR_DEBUG)\\src\\PostProcess md $(OBJDIR_DEBUG)\\src\\PostProcess
	cmd /c if not exist $(OBJDIR_DEBUG)\\src\\sys md $(OBJDIR_DEBUG)\\src\\sys
	cmd /c if not exist $(OBJDIR_DEBUG)\\src\\Image md $(OBJDIR_DEBUG)\\src\\Image
	cmd /c if not exist $(OBJDIR_DEBUG)\\src\\Physics md $(OBJDIR_DEBUG)\\src\\Physics

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) $(LIBDIR_DEBUG) -o $(OUT_DEBUG) $(OBJ_DEBUG)  $(LDFLAGS_DEBUG) -mwindows $(LIB_DEBUG)

$(OBJDIR_DEBUG)\\src\\Audio\\Audio.o: src\\Audio\\Audio.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Audio\\Audio.cpp -o $(OBJDIR_DEBUG)\\src\\Audio\\Audio.o

$(OBJDIR_DEBUG)\\src\\BSP.o: src\\BSP.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\BSP.cpp -o $(OBJDIR_DEBUG)\\src\\BSP.o

$(OBJDIR_DEBUG)\\src\\BSPFace.o: src\\BSPFace.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\BSPFace.cpp -o $(OBJDIR_DEBUG)\\src\\BSPFace.o

$(OBJDIR_DEBUG)\\src\\Camera.o: src\\Camera.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Camera.cpp -o $(OBJDIR_DEBUG)\\src\\Camera.o

$(OBJDIR_DEBUG)\\src\\EntityTemplate.o: src\\EntityTemplate.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\EntityTemplate.cpp -o $(OBJDIR_DEBUG)\\src\\EntityTemplate.o

$(OBJDIR_DEBUG)\\src\\PostProcess\\SSAO.o: src\\PostProcess\\SSAO.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\PostProcess\\SSAO.cpp -o $(OBJDIR_DEBUG)\\src\\PostProcess\\SSAO.o

$(OBJDIR_DEBUG)\\src\\PostProcess\\ScreenSpaceReflections.o: src\\PostProcess\\ScreenSpaceReflections.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\PostProcess\\ScreenSpaceReflections.cpp -o $(OBJDIR_DEBUG)\\src\\PostProcess\\ScreenSpaceReflections.o

$(OBJDIR_DEBUG)\\src\\ProgramData.o: src\\ProgramData.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\ProgramData.cpp -o $(OBJDIR_DEBUG)\\src\\ProgramData.o

$(OBJDIR_DEBUG)\\src\\ResourceManager.o: src\\ResourceManager.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\ResourceManager.cpp -o $(OBJDIR_DEBUG)\\src\\ResourceManager.o

$(OBJDIR_DEBUG)\\src\\Scene.o: src\\Scene.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Scene.cpp -o $(OBJDIR_DEBUG)\\src\\Scene.o

$(OBJDIR_DEBUG)\\src\\Shader.o: src\\Shader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Shader.cpp -o $(OBJDIR_DEBUG)\\src\\Shader.o

$(OBJDIR_DEBUG)\\src\\ShadowMapping.o: src\\ShadowMapping.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\ShadowMapping.cpp -o $(OBJDIR_DEBUG)\\src\\ShadowMapping.o

$(OBJDIR_DEBUG)\\src\\Skybox.o: src\\Skybox.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Skybox.cpp -o $(OBJDIR_DEBUG)\\src\\Skybox.o

$(OBJDIR_DEBUG)\\src\\SphericalHarmonics.o: src\\SphericalHarmonics.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\SphericalHarmonics.cpp -o $(OBJDIR_DEBUG)\\src\\SphericalHarmonics.o

$(OBJDIR_DEBUG)\\src\\Sun.o: src\\Sun.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Sun.cpp -o $(OBJDIR_DEBUG)\\src\\Sun.o

$(OBJDIR_DEBUG)\\src\\Terrain.o: src\\Terrain.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Terrain.cpp -o $(OBJDIR_DEBUG)\\src\\Terrain.o

$(OBJDIR_DEBUG)\\src\\Water.o: src\\Water.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Water.cpp -o $(OBJDIR_DEBUG)\\src\\Water.o

$(OBJDIR_DEBUG)\\src\\cubemapRenderer.o: src\\cubemapRenderer.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\cubemapRenderer.cpp -o $(OBJDIR_DEBUG)\\src\\cubemapRenderer.o

$(OBJDIR_DEBUG)\\src\\main.o: src\\main.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\main.cpp -o $(OBJDIR_DEBUG)\\src\\main.o

$(OBJDIR_DEBUG)\\src\\resources.o: src\\resources.rc
	$(WINDRES) -i src\\resources.rc -J rc -o $(OBJDIR_DEBUG)\\src\\resources.o -O coff $(INC_DEBUG)

$(OBJDIR_DEBUG)\\src\\sys\\KeyBoard.o: src\\sys\\KeyBoard.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\sys\\KeyBoard.cpp -o $(OBJDIR_DEBUG)\\src\\sys\\KeyBoard.o

$(OBJDIR_DEBUG)\\src\\sys\\filesystem.o: src\\sys\\filesystem.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\sys\\filesystem.cpp -o $(OBJDIR_DEBUG)\\src\\sys\\filesystem.o

$(OBJDIR_DEBUG)\\src\\Epsilon.o: src\\Epsilon.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Epsilon.cpp -o $(OBJDIR_DEBUG)\\src\\Epsilon.o

$(OBJDIR_DEBUG)\\src\\Frustum.o: src\\Frustum.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Frustum.cpp -o $(OBJDIR_DEBUG)\\src\\Frustum.o

$(OBJDIR_DEBUG)\\src\\Image\\DDS.o: src\\Image\\DDS.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Image\\DDS.cpp -o $(OBJDIR_DEBUG)\\src\\Image\\DDS.o

$(OBJDIR_DEBUG)\\src\\MD5_Anim.o: src\\MD5_Anim.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\MD5_Anim.cpp -o $(OBJDIR_DEBUG)\\src\\MD5_Anim.o

$(OBJDIR_DEBUG)\\src\\MD5_Model.o: src\\MD5_Model.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\MD5_Model.cpp -o $(OBJDIR_DEBUG)\\src\\MD5_Model.o

$(OBJDIR_DEBUG)\\src\\Mesh.o: src\\Mesh.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Mesh.cpp -o $(OBJDIR_DEBUG)\\src\\Mesh.o

$(OBJDIR_DEBUG)\\src\\Model.o: src\\Model.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Model.cpp -o $(OBJDIR_DEBUG)\\src\\Model.o

$(OBJDIR_DEBUG)\\src\\Particle.o: src\\Particle.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Particle.cpp -o $(OBJDIR_DEBUG)\\src\\Particle.o

$(OBJDIR_DEBUG)\\src\\Patch.o: src\\Patch.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Patch.cpp -o $(OBJDIR_DEBUG)\\src\\Patch.o

$(OBJDIR_DEBUG)\\src\\Physics\\ClothPhysicObject.o: src\\Physics\\ClothPhysicObject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Physics\\ClothPhysicObject.cpp -o $(OBJDIR_DEBUG)\\src\\Physics\\ClothPhysicObject.o

$(OBJDIR_DEBUG)\\src\\Physics\\CubePhysicObject.o: src\\Physics\\CubePhysicObject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Physics\\CubePhysicObject.cpp -o $(OBJDIR_DEBUG)\\src\\Physics\\CubePhysicObject.o

$(OBJDIR_DEBUG)\\src\\Physics\\Physics.o: src\\Physics\\Physics.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Physics\\Physics.cpp -o $(OBJDIR_DEBUG)\\src\\Physics\\Physics.o

$(OBJDIR_DEBUG)\\src\\Physics\\SpherePhysicObject.o: src\\Physics\\SpherePhysicObject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Physics\\SpherePhysicObject.cpp -o $(OBJDIR_DEBUG)\\src\\Physics\\SpherePhysicObject.o

$(OBJDIR_DEBUG)\\src\\Physics\\TriangleMeshPhysicObject.o: src\\Physics\\TriangleMeshPhysicObject.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Physics\\TriangleMeshPhysicObject.cpp -o $(OBJDIR_DEBUG)\\src\\Physics\\TriangleMeshPhysicObject.o

$(OBJDIR_DEBUG)\\src\\Picking.o: src\\Picking.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Picking.cpp -o $(OBJDIR_DEBUG)\\src\\Picking.o

$(OBJDIR_DEBUG)\\src\\Player.o: src\\Player.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Player.cpp -o $(OBJDIR_DEBUG)\\src\\Player.o

$(OBJDIR_DEBUG)\\src\\PostProcess.o: src\\PostProcess.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\PostProcess.cpp -o $(OBJDIR_DEBUG)\\src\\PostProcess.o

$(OBJDIR_DEBUG)\\src\\PostProcess\\MotionBlur.o: src\\PostProcess\\MotionBlur.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\PostProcess\\MotionBlur.cpp -o $(OBJDIR_DEBUG)\\src\\PostProcess\\MotionBlur.o

clean_debug: 
	cmd /c del /f $(OBJ_DEBUG) $(OUT_DEBUG)
	cmd /c rd bin\\Debug
	cmd /c rd $(OBJDIR_DEBUG)\\src\\Audio
	cmd /c rd $(OBJDIR_DEBUG)\\src
	cmd /c rd $(OBJDIR_DEBUG)\\src\\PostProcess
	cmd /c rd $(OBJDIR_DEBUG)\\src\\sys
	cmd /c rd $(OBJDIR_DEBUG)\\src\\Image
	cmd /c rd $(OBJDIR_DEBUG)\\src\\Physics

before_release: 
	cmd /c if not exist bin\\Release md bin\\Release
	cmd /c if not exist $(OBJDIR_RELEASE)\\src\\Audio md $(OBJDIR_RELEASE)\\src\\Audio
	cmd /c if not exist $(OBJDIR_RELEASE)\\src md $(OBJDIR_RELEASE)\\src
	cmd /c if not exist $(OBJDIR_RELEASE)\\src\\PostProcess md $(OBJDIR_RELEASE)\\src\\PostProcess
	cmd /c if not exist $(OBJDIR_RELEASE)\\src\\sys md $(OBJDIR_RELEASE)\\src\\sys
	cmd /c if not exist $(OBJDIR_RELEASE)\\src\\Image md $(OBJDIR_RELEASE)\\src\\Image
	cmd /c if not exist $(OBJDIR_RELEASE)\\src\\Physics md $(OBJDIR_RELEASE)\\src\\Physics

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)\\src\\Audio\\Audio.o: src\\Audio\\Audio.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Audio\\Audio.cpp -o $(OBJDIR_RELEASE)\\src\\Audio\\Audio.o

$(OBJDIR_RELEASE)\\src\\BSP.o: src\\BSP.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\BSP.cpp -o $(OBJDIR_RELEASE)\\src\\BSP.o

$(OBJDIR_RELEASE)\\src\\BSPFace.o: src\\BSPFace.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\BSPFace.cpp -o $(OBJDIR_RELEASE)\\src\\BSPFace.o

$(OBJDIR_RELEASE)\\src\\Camera.o: src\\Camera.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Camera.cpp -o $(OBJDIR_RELEASE)\\src\\Camera.o

$(OBJDIR_RELEASE)\\src\\EntityTemplate.o: src\\EntityTemplate.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\EntityTemplate.cpp -o $(OBJDIR_RELEASE)\\src\\EntityTemplate.o

$(OBJDIR_RELEASE)\\src\\PostProcess\\SSAO.o: src\\PostProcess\\SSAO.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\PostProcess\\SSAO.cpp -o $(OBJDIR_RELEASE)\\src\\PostProcess\\SSAO.o

$(OBJDIR_RELEASE)\\src\\PostProcess\\ScreenSpaceReflections.o: src\\PostProcess\\ScreenSpaceReflections.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\PostProcess\\ScreenSpaceReflections.cpp -o $(OBJDIR_RELEASE)\\src\\PostProcess\\ScreenSpaceReflections.o

$(OBJDIR_RELEASE)\\src\\ProgramData.o: src\\ProgramData.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\ProgramData.cpp -o $(OBJDIR_RELEASE)\\src\\ProgramData.o

$(OBJDIR_RELEASE)\\src\\ResourceManager.o: src\\ResourceManager.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\ResourceManager.cpp -o $(OBJDIR_RELEASE)\\src\\ResourceManager.o

$(OBJDIR_RELEASE)\\src\\Scene.o: src\\Scene.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Scene.cpp -o $(OBJDIR_RELEASE)\\src\\Scene.o

$(OBJDIR_RELEASE)\\src\\Shader.o: src\\Shader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Shader.cpp -o $(OBJDIR_RELEASE)\\src\\Shader.o

$(OBJDIR_RELEASE)\\src\\ShadowMapping.o: src\\ShadowMapping.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\ShadowMapping.cpp -o $(OBJDIR_RELEASE)\\src\\ShadowMapping.o

$(OBJDIR_RELEASE)\\src\\Skybox.o: src\\Skybox.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Skybox.cpp -o $(OBJDIR_RELEASE)\\src\\Skybox.o

$(OBJDIR_RELEASE)\\src\\SphericalHarmonics.o: src\\SphericalHarmonics.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\SphericalHarmonics.cpp -o $(OBJDIR_RELEASE)\\src\\SphericalHarmonics.o

$(OBJDIR_RELEASE)\\src\\Sun.o: src\\Sun.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Sun.cpp -o $(OBJDIR_RELEASE)\\src\\Sun.o

$(OBJDIR_RELEASE)\\src\\Terrain.o: src\\Terrain.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Terrain.cpp -o $(OBJDIR_RELEASE)\\src\\Terrain.o

$(OBJDIR_RELEASE)\\src\\Water.o: src\\Water.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Water.cpp -o $(OBJDIR_RELEASE)\\src\\Water.o

$(OBJDIR_RELEASE)\\src\\cubemapRenderer.o: src\\cubemapRenderer.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\cubemapRenderer.cpp -o $(OBJDIR_RELEASE)\\src\\cubemapRenderer.o

$(OBJDIR_RELEASE)\\src\\main.o: src\\main.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\main.cpp -o $(OBJDIR_RELEASE)\\src\\main.o

$(OBJDIR_RELEASE)\\src\\resources.o: src\\resources.rc
	$(WINDRES) -i src\\resources.rc -J rc -o $(OBJDIR_RELEASE)\\src\\resources.o -O coff $(INC_RELEASE)

$(OBJDIR_RELEASE)\\src\\sys\\KeyBoard.o: src\\sys\\KeyBoard.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\sys\\KeyBoard.cpp -o $(OBJDIR_RELEASE)\\src\\sys\\KeyBoard.o

$(OBJDIR_RELEASE)\\src\\sys\\filesystem.o: src\\sys\\filesystem.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\sys\\filesystem.cpp -o $(OBJDIR_RELEASE)\\src\\sys\\filesystem.o

$(OBJDIR_RELEASE)\\src\\Epsilon.o: src\\Epsilon.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Epsilon.cpp -o $(OBJDIR_RELEASE)\\src\\Epsilon.o

$(OBJDIR_RELEASE)\\src\\Frustum.o: src\\Frustum.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Frustum.cpp -o $(OBJDIR_RELEASE)\\src\\Frustum.o

$(OBJDIR_RELEASE)\\src\\Image\\DDS.o: src\\Image\\DDS.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Image\\DDS.cpp -o $(OBJDIR_RELEASE)\\src\\Image\\DDS.o

$(OBJDIR_RELEASE)\\src\\MD5_Anim.o: src\\MD5_Anim.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\MD5_Anim.cpp -o $(OBJDIR_RELEASE)\\src\\MD5_Anim.o

$(OBJDIR_RELEASE)\\src\\MD5_Model.o: src\\MD5_Model.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\MD5_Model.cpp -o $(OBJDIR_RELEASE)\\src\\MD5_Model.o

$(OBJDIR_RELEASE)\\src\\Mesh.o: src\\Mesh.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Mesh.cpp -o $(OBJDIR_RELEASE)\\src\\Mesh.o

$(OBJDIR_RELEASE)\\src\\Model.o: src\\Model.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Model.cpp -o $(OBJDIR_RELEASE)\\src\\Model.o

$(OBJDIR_RELEASE)\\src\\Particle.o: src\\Particle.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Particle.cpp -o $(OBJDIR_RELEASE)\\src\\Particle.o

$(OBJDIR_RELEASE)\\src\\Patch.o: src\\Patch.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Patch.cpp -o $(OBJDIR_RELEASE)\\src\\Patch.o

$(OBJDIR_RELEASE)\\src\\Physics\\ClothPhysicObject.o: src\\Physics\\ClothPhysicObject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Physics\\ClothPhysicObject.cpp -o $(OBJDIR_RELEASE)\\src\\Physics\\ClothPhysicObject.o

$(OBJDIR_RELEASE)\\src\\Physics\\CubePhysicObject.o: src\\Physics\\CubePhysicObject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Physics\\CubePhysicObject.cpp -o $(OBJDIR_RELEASE)\\src\\Physics\\CubePhysicObject.o

$(OBJDIR_RELEASE)\\src\\Physics\\Physics.o: src\\Physics\\Physics.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Physics\\Physics.cpp -o $(OBJDIR_RELEASE)\\src\\Physics\\Physics.o

$(OBJDIR_RELEASE)\\src\\Physics\\SpherePhysicObject.o: src\\Physics\\SpherePhysicObject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Physics\\SpherePhysicObject.cpp -o $(OBJDIR_RELEASE)\\src\\Physics\\SpherePhysicObject.o

$(OBJDIR_RELEASE)\\src\\Physics\\TriangleMeshPhysicObject.o: src\\Physics\\TriangleMeshPhysicObject.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Physics\\TriangleMeshPhysicObject.cpp -o $(OBJDIR_RELEASE)\\src\\Physics\\TriangleMeshPhysicObject.o

$(OBJDIR_RELEASE)\\src\\Picking.o: src\\Picking.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Picking.cpp -o $(OBJDIR_RELEASE)\\src\\Picking.o

$(OBJDIR_RELEASE)\\src\\Player.o: src\\Player.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Player.cpp -o $(OBJDIR_RELEASE)\\src\\Player.o

$(OBJDIR_RELEASE)\\src\\PostProcess.o: src\\PostProcess.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\PostProcess.cpp -o $(OBJDIR_RELEASE)\\src\\PostProcess.o

$(OBJDIR_RELEASE)\\src\\PostProcess\\MotionBlur.o: src\\PostProcess\\MotionBlur.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\PostProcess\\MotionBlur.cpp -o $(OBJDIR_RELEASE)\\src\\PostProcess\\MotionBlur.o

clean_release: 
	cmd /c del /f $(OBJ_RELEASE) $(OUT_RELEASE)
	cmd /c rd bin\\Release
	cmd /c rd $(OBJDIR_RELEASE)\\src\\Audio
	cmd /c rd $(OBJDIR_RELEASE)\\src
	cmd /c rd $(OBJDIR_RELEASE)\\src\\PostProcess
	cmd /c rd $(OBJDIR_RELEASE)\\src\\sys
	cmd /c rd $(OBJDIR_RELEASE)\\src\\Image
	cmd /c rd $(OBJDIR_RELEASE)\\src\\Physics

src\BSP.cpp: include\BSP.h include\Frustum.h include\Texture.h

include\BSP.h: include\BSPFace.h include\Frustum.h include\ResourceManager.h

include\BSPFace.h: deppend\SOIL\src\SOIL.h include\Includes.h

include\Includes.h: include\Types.h

include\Types.h: deppend\bullet3-2.83.7\src\btBulletDynamicsCommon.h deppend\bullet3-2.83.7\src\btBulletCollisionCommon.h

deppend\bullet3-2.83.7\src\btBulletDynamicsCommon.h: deppend\bullet3-2.83.7\src\btBulletCollisionCommon.h

include\Frustum.h: include\Model.h

include\Model.h: include\Texture.h include\Mesh.h include\Types.h include\emlFormat.h include\camera.h

include\Texture.h: deppend\SOIL\src\SOIL.h include\ProgramData.h include\Includes.h include\Log.h

include\Mesh.h: include\Shader.h include\emlFormat.h

include\Shader.h: include\Types.h

include\ResourceManager.h: include\Texture.h include\Model.h include\Water.h include\Terrain.h include\Grass.h include\Shader.h include\CubeMap.h include\Includes.h

include\Water.h: include\Shader.h include\Texture.h include\Camera.h include\Model.h

include\Terrain.h: include\Shader.h include\Texture.h

include\Grass.h: include\Shader.h

include\CubeMap.h: include\Texture.h include\Shader.h include\Types.h include\cubemapRenderer.h

include\cubemapRenderer.h: include\Shader.h include\camera.h

src\BSPFace.cpp: include\ResourceManager.h include\BSPFace.h

src\Camera.cpp: include\camera.h include\Types.h include\Includes.h

src\EntityTemplate.cpp: include\EntityTemplate.h

include\EntityTemplate.h: include\Component.h include\ResourceManager.h

include\Component.h: include\Model.h include\ResourceManager.h include\Types.h include\Patch.h

include\Patch.h: include\Shader.h include\Texture.h

src\ProgramData.cpp: deppend\ini\include\INIReader.h include\ProgramData.h

src\ResourceManager.cpp: include\ResourceManager.h

src\Scene.cpp: include\Scene.h

include\Scene.h: include\ResourceManager.h include\Shader.h include\EntityTemplate.h include\BSP.h include\ShadowMapping.h include\Sun.h include\Skybox.h include\PostProcess.h include\Light.h include\EpsilonMemory.h include\Camera.h include\Frustum.h

include\ShadowMapping.h: include\Shader.h include\Types.h

include\Sun.h: include\Texture.h include\Shader.h include\camera.h

include\Skybox.h: include\camera.h include\Model.h include\Shader.h

include\PostProcess.h: include\Shader.h include\camera.h include\ShadowMapping.h include\Light.h include\Texture.h

include\Light.h: include\Types.h

src\Shader.cpp: include\Shader.h include\Log.h include\Includes.h

src\ShadowMapping.cpp: include\ShadowMapping.h

src\Skybox.cpp: deppend\SOIL\src\SOIL.h include\Skybox.h include\SkyboxData.h include\ResourceManager.h

src\SphericalHarmonics.cpp: include\SphericalHarmonics.h include\Types.h

include\SphericalHarmonics.h: include\CubeMap.h include\Includes.h

src\Sun.cpp: include\Sun.h

src\Terrain.cpp: include\Terrain.h deppend\SOIL\src\SOIL.h include\ResourceManager.h include\Includes.h

src\Water.cpp: include\Water.h

src\cubemapRenderer.cpp: include\cubemapRenderer.h include\Texture.h

src\main.cpp: include\Shader.h deppend\SOIL\src\SOIL.h include\main.h

include\main.h: include\ProgramData.h include\Epsilon.h include\Log.h

include\Epsilon.h: include\Texture.h include\Shader.h include\Skybox.h include\camera.h include\Model.h include\Text.h include\Terrain.h include\Grass.h include\PostProcess.h include\Water.h include\Sun.h include\BSP.h include\MD5_Model.h include\MD5_Anim.h include\ShadowMapping.h include\EntityTemplate.h include\ResourceManager.h include\Scene.h include\Player.h include\SplashScreen.h include\SphericalHarmonics.h include\Picking.h include\Log.h filesystem.h include\ParticleSystem.h include\cubemapRenderer.h include\CubeMap.h include\CommandFunctions.h include\Patch.h

include\Text.h: deppend\FreeType2\include\ft2build.h include\Shader.h

include\MD5_Model.h: include\MD5_Anim.h deppend\SOIL\src\SOIL.h

include\Player.h: include\camera.h

include\ParticleSystem.h: include\Particle.h include\ParticleProxy.h

include\Particle.h: include\Types.h

include\ParticleProxy.h: include\Types.h include\ParticleRenderer.h include\Texture.h

include\ParticleRenderer.h: include\Particle.h include\Shader.h

src\sys\filesystem.cpp: filesystem.h include\Log.h

src\Epsilon.cpp: include\Epsilon.h include\ProgramData.h include\Includes.h include\Types.h version.h include\EpsilonMemory.h include\Log.h

src\Frustum.cpp: include\Frustum.h

src\Image\DDS.cpp: include\DDS.h

include\DDS.h: include\DDSFile.h

src\MD5_Anim.cpp: include\MD5_Anim.h include\Includes.h

src\MD5_Model.cpp: include\Includes.h include\MD5_Model.h include\Texture.h

src\Mesh.cpp: include\Mesh.h include\ResourceManager.h

src\Model.cpp: include\Model.h include\ResourceManager.h include\Log.h

src\Particle.cpp: include\ParticleSystem.h include\Types.h

src\Patch.cpp: include\Patch.h

src\Picking.cpp: include\Picking.h

src\Player.cpp: include\Player.h include\ResourceManager.h

src\PostProcess.cpp: include\PostProcess.h include\ProgramData.h include\Includes.h

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

