<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_water_8cpp" kind="file" language="C++">
    <compoundname>Water.cpp</compoundname>
    <includes refid="_water_8h" local="no">Water.h</includes>
    <incdepgraph>
      <node id="1310">
        <label>D:/Epsilon/Epsilon Engine/src/Water.cpp</label>
        <link refid="Water.cpp"/>
        <childnode refid="1311" relation="include">
        </childnode>
      </node>
      <node id="1320">
        <label>SOIL.h</label>
      </node>
      <node id="1315">
        <label>Shader.h</label>
        <link refid="_shader_8h_source"/>
        <childnode refid="1312" relation="include">
        </childnode>
        <childnode refid="1316" relation="include">
        </childnode>
        <childnode refid="1317" relation="include">
        </childnode>
      </node>
      <node id="1311">
        <label>Water.h</label>
        <link refid="_water_8h_source"/>
        <childnode refid="1312" relation="include">
        </childnode>
        <childnode refid="1313" relation="include">
        </childnode>
        <childnode refid="1314" relation="include">
        </childnode>
        <childnode refid="1315" relation="include">
        </childnode>
        <childnode refid="1318" relation="include">
        </childnode>
        <childnode refid="1322" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1325" relation="include">
        </childnode>
      </node>
      <node id="1316">
        <label>string</label>
      </node>
      <node id="1312">
        <label>GL/glew.h</label>
      </node>
      <node id="1324">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="1323">
        <label>glm/gtc/quaternion.hpp</label>
      </node>
      <node id="1318">
        <label>Texture.h</label>
        <link refid="_texture_8h_source"/>
        <childnode refid="1317" relation="include">
        </childnode>
        <childnode refid="1316" relation="include">
        </childnode>
        <childnode refid="1319" relation="include">
        </childnode>
        <childnode refid="1312" relation="include">
        </childnode>
        <childnode refid="1320" relation="include">
        </childnode>
        <childnode refid="1321" relation="include">
        </childnode>
      </node>
      <node id="1319">
        <label>vector</label>
      </node>
      <node id="1322">
        <label>Camera.h</label>
        <link refid="camera_8h_source"/>
        <childnode refid="1313" relation="include">
        </childnode>
        <childnode refid="1314" relation="include">
        </childnode>
        <childnode refid="1323" relation="include">
        </childnode>
        <childnode refid="1324" relation="include">
        </childnode>
        <childnode refid="1317" relation="include">
        </childnode>
      </node>
      <node id="1317">
        <label>iostream</label>
      </node>
      <node id="1314">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="1321">
        <label>ProgramData.h</label>
        <link refid="_program_data_8h_source"/>
      </node>
      <node id="1325">
        <label>memory</label>
      </node>
      <node id="1313">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Water.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="class_water_1a456fec66ab6833de7615dc9fb212ae2a" refkind="member"><highlight class="normal"><ref refid="class_water_1a456fec66ab6833de7615dc9fb212ae2a" kindref="member">Water::Water</ref>(glm::vec3<sp/>position,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;scale<sp/>=<sp/>scale;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;position<sp/>=<sp/>position;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;ReflectionResoulution<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;RefractionResoulution<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;CreateReflectionFBO();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;CreateRefractionFBO();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;LoadShaders();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;LoadTextures();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;GeneratevertexArray();</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="class_water_1aa61c82b036ffee41246bfff00df51211" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_water_1aa61c82b036ffee41246bfff00df51211" kindref="member">Water::RenderWater</ref>(std::unique_ptr&lt;Camera&gt;&amp;<sp/>cam,<sp/>glm::vec3<sp/>lightDir)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>shader-&gt;Use();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;reflectionSampler&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;reflectionTexture);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE1);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;refractionSampler&quot;</highlight><highlight class="normal">),<sp/>1);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;refractionTexture);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE2);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;depthSampler&quot;</highlight><highlight class="normal">),<sp/>2);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;refractionDepthTexture);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE3);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;normalSampler&quot;</highlight><highlight class="normal">),<sp/>3);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;normalTexture);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE4);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;DuDvSampler&quot;</highlight><highlight class="normal">),<sp/>4);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;DuDvTexture);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE5);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;foamSampler&quot;</highlight><highlight class="normal">),<sp/>5);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;foamTexture);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE6);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1i(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;diffuseSampler&quot;</highlight><highlight class="normal">),<sp/>6);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>this-&gt;diffuseTexture);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>model<sp/>=<sp/>glm::mat4(1.0);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>TranslationMatrix<sp/>=<sp/>glm::translate(glm::mat4(1.0),<sp/>this-&gt;position);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>model<sp/>=<sp/>TranslationMatrix;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;MVP<sp/>=<sp/>cam-&gt;getProjectionMatrix()<sp/>*<sp/>cam-&gt;getViewMatrix()<sp/>*<sp/>model;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>view<sp/>=<sp/>glm::mat4(cam-&gt;getViewMatrix());</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;model[0][0]);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;view&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;cam-&gt;getViewMatrix()[0][0]);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;projection&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;cam-&gt;getProjectionMatrix()[0][0]);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;MVP&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;this-&gt;MVP[0][0]);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">),<sp/><sp/>glfwGetTime());</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;cameraPosition&quot;</highlight><highlight class="normal">),<sp/>cam-&gt;getPosition().x,<sp/>cam-&gt;getPosition().y,<sp/>cam-&gt;getPosition().z);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;LightDirection&quot;</highlight><highlight class="normal">),<sp/>lightDir.x,<sp/>lightDir.y,<sp/>lightDir.z);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(this-&gt;VAO);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawElements(GL_TRIANGLES,<sp/>6,<sp/>GL_UNSIGNED_INT,<sp/>0);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(0);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE1);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE2);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE3);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE4);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>glActiveTexture(GL_TEXTURE5);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::LoadTextures(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classe_texture" kindref="compound">eTexture</ref>*<sp/>tex<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classe_texture" kindref="compound">eTexture</ref>(</highlight><highlight class="stringliteral">&quot;Wavy_Water<sp/>-<sp/>Height<sp/>(Normal<sp/>Map<sp/>2).png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>normalTexture<sp/>=<sp/>tex-&gt;getTextureID();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tex;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classe_texture" kindref="compound">eTexture</ref>*<sp/>tex2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classe_texture" kindref="compound">eTexture</ref>(</highlight><highlight class="stringliteral">&quot;Wavy_Water<sp/>-<sp/>DuDvt.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>DuDvTexture<sp/>=<sp/>tex2-&gt;getTextureID();</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tex2;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classe_texture" kindref="compound">eTexture</ref>*<sp/>tex3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classe_texture" kindref="compound">eTexture</ref>(</highlight><highlight class="stringliteral">&quot;Foam.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>foamTexture<sp/>=<sp/>tex3-&gt;getTextureID();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tex3;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classe_texture" kindref="compound">eTexture</ref>*<sp/>tex4<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classe_texture" kindref="compound">eTexture</ref>(</highlight><highlight class="stringliteral">&quot;Wavy_Water<sp/>-<sp/>Color<sp/>Map.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>diffuseTexture<sp/>=<sp/>tex4-&gt;getTextureID();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tex4;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::LoadShaders(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>shader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(</highlight><highlight class="stringliteral">&quot;shaders/water.vglsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/water.fglsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::CreateReflectionFBO(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenFramebuffers(1,<sp/>&amp;reflectionFBO);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>reflectionFBO);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;reflectionTexture);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>reflectionTexture);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,GL_RGB16F,<sp/>ReflectionResoulution,<sp/>ReflectionResoulution,<sp/>0,GL_RGB,<sp/>GL_UNSIGNED_BYTE,<sp/>0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenRenderbuffers(1,<sp/>&amp;reflectionRBO);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindRenderbuffer(GL_RENDERBUFFER,<sp/>reflectionRBO);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>glRenderbufferStorage(GL_RENDERBUFFER,<sp/>GL_DEPTH_COMPONENT,<sp/>ReflectionResoulution,<sp/>ReflectionResoulution);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>glFramebufferRenderbuffer(GL_FRAMEBUFFER,<sp/>GL_DEPTH_ATTACHMENT,<sp/>GL_RENDERBUFFER,<sp/>reflectionRBO);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>glFramebufferTexture(GL_FRAMEBUFFER,<sp/>GL_COLOR_ATTACHMENT0,<sp/>reflectionTexture,<sp/>0);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::CreateRefractionFBO(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenFramebuffers(1,<sp/>&amp;refractionFBO);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>refractionFBO);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;refractionTexture);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>refractionTexture);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,GL_RGB16F,<sp/>RefractionResoulution,<sp/>RefractionResoulution,<sp/>0,GL_RGB,<sp/>GL_FLOAT,<sp/>0);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>glFramebufferTexture(GL_FRAMEBUFFER,<sp/>GL_COLOR_ATTACHMENT0,<sp/>refractionTexture,<sp/>0);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenRenderbuffers(1,<sp/>&amp;refractionRBO);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindRenderbuffer(GL_RENDERBUFFER,<sp/>refractionRBO);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>glRenderbufferStorage(GL_RENDERBUFFER,<sp/>GL_DEPTH_COMPONENT,<sp/>RefractionResoulution,<sp/>RefractionResoulution);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>glFramebufferRenderbuffer(GL_FRAMEBUFFER,<sp/>GL_DEPTH_ATTACHMENT,<sp/>GL_RENDERBUFFER,<sp/>refractionRBO);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenTextures(1,<sp/>&amp;refractionDepthTexture);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>refractionDepthTexture);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,GL_DEPTH24_STENCIL8,<sp/>RefractionResoulution,<sp/>RefractionResoulution,<sp/>0,GL_DEPTH_STENCIL,<sp/>GL_UNSIGNED_INT_24_8,<sp/>0);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_NEAREST);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_NEAREST);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>glFramebufferTexture2D(GL_FRAMEBUFFER,<sp/>GL_DEPTH_STENCIL_ATTACHMENT,<sp/>GL_TEXTURE_2D,<sp/>refractionDepthTexture,<sp/>0);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>GLenum<sp/>DrawBuffers[1]<sp/>=<sp/>{GL_COLOR_ATTACHMENT0};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>glDrawBuffers(1,<sp/>DrawBuffers);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::GenerateReflection(std::unique_ptr&lt;Camera&gt;&amp;<sp/>cam)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateModelViewProjection(cam);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>reflectionFBO);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,0,ReflectionResoulution,<sp/>ReflectionResoulution);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::GenerateRefraction(std::unique_ptr&lt;Camera&gt;&amp;<sp/>cam)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>GenerateModelViewProjection(cam);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>refractionFBO);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,0,RefractionResoulution,<sp/>RefractionResoulution);</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::GeneratevertexArray()</highlight></codeline>
<codeline lineno="187"><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>GLfloat<sp/>plane[]<sp/>=</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0f<sp/>*<sp/>scale,<sp/><sp/>this-&gt;position.y,<sp/><sp/>1.0f*<sp/>scale,<sp/>1.0f,<sp/>1.0f,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.0f*<sp/><sp/>scale,<sp/><sp/>this-&gt;position.y,<sp/>-1.0f*<sp/>scale,<sp/>1.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0f*<sp/><sp/>scale,<sp/><sp/>this-&gt;position.y,<sp/>-1.0f*<sp/>scale,<sp/>0.0f,<sp/>0.0f,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1.0f*<sp/><sp/>scale,<sp/><sp/>this-&gt;position.y,<sp/><sp/>1.0f*<sp/>scale,<sp/>0.0f,<sp/>1.0f,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>GLuint<sp/>indices[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1,<sp/>3,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>2,<sp/>3</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenVertexArrays(1,<sp/>&amp;this-&gt;VAO);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;this-&gt;VBO);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>glGenBuffers(1,<sp/>&amp;this-&gt;EBO);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(this-&gt;VAO);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>this-&gt;VBO);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(plane),<sp/>&amp;plane[0],<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindBuffer(GL_ELEMENT_ARRAY_BUFFER,<sp/>this-&gt;EBO);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>glBufferData(GL_ELEMENT_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(indices),<sp/>indices,<sp/>GL_STATIC_DRAW);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(0);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(0,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/>5<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(GLfloat),<sp/>(GLvoid*)0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnableVertexAttribArray(1);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>glVertexAttribPointer(1,<sp/>2,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/>5<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(GLfloat),<sp/>(GLvoid*)(3<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(GLfloat)));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindVertexArray(0);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::FinishWatercomputation(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Water::GenerateModelViewProjection(std::unique_ptr&lt;Camera&gt;&amp;<sp/>cam)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>model<sp/>=<sp/>glm::mat4(1.0);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>MVP<sp/>=<sp/>cam-&gt;getProjectionMatrix()<sp/>*<sp/>cam-&gt;getViewMatrix()<sp/>*<sp/>model;</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Epsilon/Epsilon Engine/src/Water.cpp"/>
  </compounddef>
</doxygen>
