<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_scene" kind="class" language="C++" prot="public">
    <compoundname>Scene</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_scene_1acbc85b1c81aff53b9caeeda5f43ef3ff" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="class_resource_manager" kindref="compound">ResourceManager</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ResourceManager&gt; Scene::m_ResourceManager</definition>
        <argsstring></argsstring>
        <name>m_ResourceManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="57" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1ae4844d20b0966cd8643a7e1856f290e8" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, std::shared_ptr&lt; <ref refid="class_entity_template" kindref="compound">EntityTemplate</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, std::shared_ptr&lt;EntityTemplate&gt; &gt; Scene::map_Entities</definition>
        <argsstring></argsstring>
        <name>map_Entities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="59" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1acb3044ff71429b332b7ed746990b23e9" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, std::shared_ptr&lt; <ref refid="class_light" kindref="compound">Light</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, std::shared_ptr&lt;Light&gt; &gt; Scene::map_Lights</definition>
        <argsstring></argsstring>
        <name>map_Lights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="60" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1a284b38fe21e6d87fedb28e0d4e38b6ac" prot="private" static="no" mutable="no">
        <type>std::map&lt; int, std::shared_ptr&lt; <ref refid="class_shadow_map" kindref="compound">ShadowMap</ref> &gt; &gt;</type>
        <definition>std::map&lt;int, std::shared_ptr&lt;ShadowMap&gt; &gt; Scene::map_ShadowMaps</definition>
        <argsstring></argsstring>
        <name>map_ShadowMaps</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="61" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1afa20f77078a752abb08e53ab5eb0b4c6" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_c_quake3_b_s_p" kindref="compound">CQuake3BSP</ref> &gt;</type>
        <definition>std::unique_ptr&lt;CQuake3BSP&gt; Scene::m_BSPMap</definition>
        <argsstring></argsstring>
        <name>m_BSPMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="63" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1ac639c6e2ba159df8632bbe7cc4f9d461" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_sun" kindref="compound">Sun</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Sun&gt; Scene::m_Sun</definition>
        <argsstring></argsstring>
        <name>m_Sun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="64" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1adedb9598cae5aed3d68d6dfec392116d" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_skybox" kindref="compound">Skybox</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Skybox&gt; Scene::m_Skybox</definition>
        <argsstring></argsstring>
        <name>m_Skybox</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="65" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1ae3c64ce169a652d6bcf1fc3120f0a702" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_post_process" kindref="compound">PostProcess</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PostProcess&gt; Scene::m_DeferredRenderer</definition>
        <argsstring></argsstring>
        <name>m_DeferredRenderer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="66" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1a206acc18a7bc9f233c6f5bdde336f278" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_post_process" kindref="compound">PostProcess</ref> &gt;</type>
        <definition>std::unique_ptr&lt;PostProcess&gt; Scene::m_PostProcess</definition>
        <argsstring></argsstring>
        <name>m_PostProcess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="67" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1ae8d89e6c1a5c06cacea5e733dcf46207" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_program_data" kindref="compound">ProgramData</ref> &gt;</type>
        <definition>std::unique_ptr&lt;ProgramData&gt; Scene::m_ProgramData</definition>
        <argsstring></argsstring>
        <name>m_ProgramData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="68" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1a8252214e11f2be643515899a52f9dc11" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="class_c_frustum" kindref="compound">CFrustum</ref> &gt;</type>
        <definition>std::unique_ptr&lt;CFrustum&gt; Scene::m_Frustum</definition>
        <argsstring></argsstring>
        <name>m_Frustum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="69" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scene_1a7ba4770364d9e1bfe7f450ddbe8d3e77" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Scene::m_SceneName</definition>
        <argsstring></argsstring>
        <name>m_SceneName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="71" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_scene_1a560981a699d1a725c5d80830fc32cd9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Scene::Scene</definition>
        <argsstring>(string sceneName)</argsstring>
        <name>Scene</name>
        <param>
          <type>string</type>
          <declname>sceneName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="28" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Scene.cpp" bodystart="3" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1a3b8cec2e32546713915f8c6303c951f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Scene::~Scene</definition>
        <argsstring>()</argsstring>
        <name>~Scene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="29" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Scene.cpp" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1a6b806d01f6b3bcdfc47f6fb918ddfc75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Scene::setupScene</definition>
        <argsstring>()</argsstring>
        <name>setupScene</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="31" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Scene.cpp" bodystart="15" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1ab12a3c580f885981907b5813a4b4b22b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scene::Update</definition>
        <argsstring>(float deltatime, GLFWwindow *window)</argsstring>
        <name>Update</name>
        <param>
          <type>float</type>
          <declname>deltatime</declname>
        </param>
        <param>
          <type>GLFWwindow *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="33" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Scene.cpp" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1a91913b921d41d374e00eac347358dc14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scene::Render</definition>
        <argsstring>()</argsstring>
        <name>Render</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="35" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Scene.cpp" bodystart="70" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_scene_1aa5d6aed57a5640c318188b18f51f2d80" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Scene::LoadGeometry</definition>
        <argsstring>()</argsstring>
        <name>LoadGeometry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="39" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Scene.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1a1a8f3fe26766d0af1a3e823857266426" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Scene::LoadEntities</definition>
        <argsstring>()</argsstring>
        <name>LoadEntities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="41" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Scene.cpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1abc8ddcccced32a208d4d4b1968823833" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Scene::LoadSounds</definition>
        <argsstring>()</argsstring>
        <name>LoadSounds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1a6d84a4166268d75e48fb5376b2e2554d" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scene::CalculateVisibility</definition>
        <argsstring>()</argsstring>
        <name>CalculateVisibility</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="45" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Scene.cpp" bodystart="27" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1a6c8778c75d1abc7cc6395c57d40eb69e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scene::LightPrePass</definition>
        <argsstring>()</argsstring>
        <name>LightPrePass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1a53f61c29a484b806b28b01cb90ac38c4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scene::DeferredRenderingPass</definition>
        <argsstring>()</argsstring>
        <name>DeferredRenderingPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1a6151031a230527dfd4146317b92bad1b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scene::ForwardRenderingPass</definition>
        <argsstring>()</argsstring>
        <name>ForwardRenderingPass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_scene_1aeeb0c33283db0dda53e14d66cf33f701" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Scene::ImageProcessing</definition>
        <argsstring>()</argsstring>
        <name>ImageProcessing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Epsilon/Epsilon Engine/include/Scene.h" line="26" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Scene.h" bodystart="25" bodyend="72"/>
    <listofallmembers>
      <member refid="class_scene_1a6d84a4166268d75e48fb5376b2e2554d" prot="private" virt="non-virtual"><scope>Scene</scope><name>CalculateVisibility</name></member>
      <member refid="class_scene_1a53f61c29a484b806b28b01cb90ac38c4" prot="private" virt="non-virtual"><scope>Scene</scope><name>DeferredRenderingPass</name></member>
      <member refid="class_scene_1a6151031a230527dfd4146317b92bad1b" prot="private" virt="non-virtual"><scope>Scene</scope><name>ForwardRenderingPass</name></member>
      <member refid="class_scene_1aeeb0c33283db0dda53e14d66cf33f701" prot="private" virt="non-virtual"><scope>Scene</scope><name>ImageProcessing</name></member>
      <member refid="class_scene_1a6c8778c75d1abc7cc6395c57d40eb69e" prot="private" virt="non-virtual"><scope>Scene</scope><name>LightPrePass</name></member>
      <member refid="class_scene_1a1a8f3fe26766d0af1a3e823857266426" prot="private" virt="non-virtual"><scope>Scene</scope><name>LoadEntities</name></member>
      <member refid="class_scene_1aa5d6aed57a5640c318188b18f51f2d80" prot="private" virt="non-virtual"><scope>Scene</scope><name>LoadGeometry</name></member>
      <member refid="class_scene_1abc8ddcccced32a208d4d4b1968823833" prot="private" virt="non-virtual"><scope>Scene</scope><name>LoadSounds</name></member>
      <member refid="class_scene_1afa20f77078a752abb08e53ab5eb0b4c6" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_BSPMap</name></member>
      <member refid="class_scene_1ae3c64ce169a652d6bcf1fc3120f0a702" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_DeferredRenderer</name></member>
      <member refid="class_scene_1a8252214e11f2be643515899a52f9dc11" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_Frustum</name></member>
      <member refid="class_scene_1a206acc18a7bc9f233c6f5bdde336f278" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_PostProcess</name></member>
      <member refid="class_scene_1ae8d89e6c1a5c06cacea5e733dcf46207" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_ProgramData</name></member>
      <member refid="class_scene_1acbc85b1c81aff53b9caeeda5f43ef3ff" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_ResourceManager</name></member>
      <member refid="class_scene_1a7ba4770364d9e1bfe7f450ddbe8d3e77" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_SceneName</name></member>
      <member refid="class_scene_1adedb9598cae5aed3d68d6dfec392116d" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_Skybox</name></member>
      <member refid="class_scene_1ac639c6e2ba159df8632bbe7cc4f9d461" prot="private" virt="non-virtual"><scope>Scene</scope><name>m_Sun</name></member>
      <member refid="class_scene_1ae4844d20b0966cd8643a7e1856f290e8" prot="private" virt="non-virtual"><scope>Scene</scope><name>map_Entities</name></member>
      <member refid="class_scene_1acb3044ff71429b332b7ed746990b23e9" prot="private" virt="non-virtual"><scope>Scene</scope><name>map_Lights</name></member>
      <member refid="class_scene_1a284b38fe21e6d87fedb28e0d4e38b6ac" prot="private" virt="non-virtual"><scope>Scene</scope><name>map_ShadowMaps</name></member>
      <member refid="class_scene_1a91913b921d41d374e00eac347358dc14" prot="public" virt="non-virtual"><scope>Scene</scope><name>Render</name></member>
      <member refid="class_scene_1a560981a699d1a725c5d80830fc32cd9a" prot="public" virt="non-virtual"><scope>Scene</scope><name>Scene</name></member>
      <member refid="class_scene_1a6b806d01f6b3bcdfc47f6fb918ddfc75" prot="public" virt="non-virtual"><scope>Scene</scope><name>setupScene</name></member>
      <member refid="class_scene_1ab12a3c580f885981907b5813a4b4b22b" prot="public" virt="non-virtual"><scope>Scene</scope><name>Update</name></member>
      <member refid="class_scene_1a3b8cec2e32546713915f8c6303c951f1" prot="public" virt="virtual"><scope>Scene</scope><name>~Scene</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
