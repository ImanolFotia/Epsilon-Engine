<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_frustum_8cpp" kind="file" language="C++">
    <compoundname>Frustum.cpp</compoundname>
    <includes refid="_frustum_8h" local="yes">Frustum.h</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="941">
        <label>SOIL.h</label>
      </node>
      <node id="944">
        <label>Shader.h</label>
        <link refid="_shader_8h_source"/>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
      </node>
      <node id="932">
        <label>string</label>
      </node>
      <node id="928">
        <label>Frustum.h</label>
        <link refid="_frustum_8h_source"/>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
      </node>
      <node id="938">
        <label>GL/glew.h</label>
      </node>
      <node id="936">
        <label>map</label>
      </node>
      <node id="927">
        <label>D:/Epsilon/Epsilon Engine/src/Frustum.cpp</label>
        <link refid="Frustum.cpp"/>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
      </node>
      <node id="939">
        <label>glm/gtc/quaternion.hpp</label>
      </node>
      <node id="940">
        <label>Texture.h</label>
        <link refid="_texture_8h_source"/>
        <childnode refid="935" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
        <childnode refid="942" relation="include">
        </childnode>
      </node>
      <node id="933">
        <label>fstream</label>
      </node>
      <node id="949">
        <label>btBulletCollisionCommon.h</label>
      </node>
      <node id="945">
        <label>emlFormat.h</label>
        <link refid="eml_format_8h_source"/>
        <childnode refid="932" relation="include">
        </childnode>
      </node>
      <node id="937">
        <label>vector</label>
      </node>
      <node id="934">
        <label>sstream</label>
      </node>
      <node id="947">
        <label>Types.h</label>
        <link refid="_types_8h_source"/>
        <childnode refid="948" relation="include">
        </childnode>
        <childnode refid="949" relation="include">
        </childnode>
      </node>
      <node id="935">
        <label>iostream</label>
      </node>
      <node id="931">
        <label>Model.h</label>
        <link refid="_model_8h_source"/>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="934" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="947" relation="include">
        </childnode>
        <childnode refid="946" relation="include">
        </childnode>
        <childnode refid="945" relation="include">
        </childnode>
      </node>
      <node id="930">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="943">
        <label>Mesh.h</label>
        <link refid="_mesh_8h_source"/>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="934" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="944" relation="include">
        </childnode>
        <childnode refid="945" relation="include">
        </childnode>
        <childnode refid="946" relation="include">
        </childnode>
      </node>
      <node id="948">
        <label>btBulletDynamicsCommon.h</label>
      </node>
      <node id="942">
        <label>ProgramData.h</label>
        <link refid="_program_data_8h_source"/>
      </node>
      <node id="946">
        <label>memory</label>
      </node>
      <node id="929">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_frustum_8cpp_1a357634dea4646ee190e872af91d39870" prot="public" static="no">
        <name>FIRST_OBJECT_ID</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/src/Frustum.cpp" line="13" column="9" bodyfile="D:/Epsilon/Epsilon Engine/src/Frustum.cpp" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_frustum_8cpp_1ad8a4adf5f8d4bb2b86e7562cf14e561f" prot="public" static="no">
        <name>FrustumSide</name>
        <enumvalue id="_frustum_8cpp_1ad8a4adf5f8d4bb2b86e7562cf14e561faec8379af7490bb9eaaf579cf17876f38" prot="public">
          <name>RIGHT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_frustum_8cpp_1ad8a4adf5f8d4bb2b86e7562cf14e561fadb45120aafd37a973140edee24708065" prot="public">
          <name>LEFT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_frustum_8cpp_1ad8a4adf5f8d4bb2b86e7562cf14e561fa8c371f4e766fb2c49c219bbc88989461" prot="public">
          <name>BOTTOM</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_frustum_8cpp_1ad8a4adf5f8d4bb2b86e7562cf14e561fa0ad44897a70fba309c24a5b6007de3e3" prot="public">
          <name>TOP</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_frustum_8cpp_1ad8a4adf5f8d4bb2b86e7562cf14e561fac921ff2cfc571c1d19b0485d7f6926ee" prot="public">
          <name>BACK</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_frustum_8cpp_1ad8a4adf5f8d4bb2b86e7562cf14e561fa76bd5ec6ea9d8a1b582d8d5e43102a02" prot="public">
          <name>FRONT</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/src/Frustum.cpp" line="18" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Frustum.cpp" bodystart="17" bodyend="25"/>
      </memberdef>
      <memberdef kind="enum" id="_frustum_8cpp_1a31f6bbdce0894df6a817f493afffda84" prot="public" static="no">
        <name>PlaneData</name>
        <enumvalue id="_frustum_8cpp_1a31f6bbdce0894df6a817f493afffda84a42a4ade1acd55a49164099104990e09f" prot="public">
          <name>A</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_frustum_8cpp_1a31f6bbdce0894df6a817f493afffda84a3f2a77ecd272aa6d6b5902faa5e5fc68" prot="public">
          <name>B</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_frustum_8cpp_1a31f6bbdce0894df6a817f493afffda84a739ce3f516592d245d16fd8a3893472c" prot="public">
          <name>C</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_frustum_8cpp_1a31f6bbdce0894df6a817f493afffda84a77a6b11f9898c052926f1d49765861e8" prot="public">
          <name>D</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/src/Frustum.cpp" line="30" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Frustum.cpp" bodystart="29" bodyend="35"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_frustum_8cpp_1a1ebb2904854655136cc90dcef91fa546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NormalizePlane</definition>
        <argsstring>(float frustum[6][4], int side)</argsstring>
        <name>NormalizePlane</name>
        <param>
          <type>float</type>
          <declname>frustum</declname>
          <array>[6][4]</array>
        </param>
        <param>
          <type>int</type>
          <declname>side</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/src/Frustum.cpp" line="43" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Frustum.cpp" bodystart="43" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Frustum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>the<sp/>index<sp/>in<sp/>our<sp/>selection<sp/>buffer<sp/>that<sp/>has<sp/>the<sp/>closet<sp/>object<sp/>ID<sp/>clicked</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIRST_OBJECT_ID<sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>create<sp/>an<sp/>enum<sp/>of<sp/>the<sp/>sides<sp/>so<sp/>we<sp/>don&apos;t<sp/>have<sp/>to<sp/>call<sp/>each<sp/>side<sp/>0<sp/>or<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>way<sp/>it<sp/>makes<sp/>it<sp/>more<sp/>understandable<sp/>and<sp/>readable<sp/>when<sp/>dealing<sp/>with<sp/>frustum<sp/>sides.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>FrustumSide</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>RIGHT<sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>RIGHT<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>LEFT<sp/><sp/><sp/><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>LEFT<sp/><sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>BOTTOM<sp/><sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>BOTTOM<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>TOP<sp/><sp/><sp/><sp/><sp/>=<sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>TOP<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>BACK<sp/><sp/><sp/><sp/>=<sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>BACK<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>FRONT<sp/><sp/><sp/>=<sp/>5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>FRONT<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Like<sp/>above,<sp/>instead<sp/>of<sp/>saying<sp/>a<sp/>number<sp/>for<sp/>the<sp/>ABC<sp/>and<sp/>D<sp/>of<sp/>the<sp/>plane,<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>want<sp/>to<sp/>be<sp/>more<sp/>descriptive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>PlaneData</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>A<sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>X<sp/>value<sp/>of<sp/>the<sp/>plane&apos;s<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>B<sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Y<sp/>value<sp/>of<sp/>the<sp/>plane&apos;s<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>C<sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Z<sp/>value<sp/>of<sp/>the<sp/>plane&apos;s<sp/>normal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>distance<sp/>the<sp/>plane<sp/>is<sp/>from<sp/>the<sp/>origin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>NormalizePlane(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>frustum[6][4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>side)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>calculate<sp/>the<sp/>magnitude<sp/>of<sp/>the<sp/>normal<sp/>to<sp/>the<sp/>plane<sp/>(point<sp/>A<sp/>B<sp/>C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>that<sp/>(A,<sp/>B,<sp/>C)<sp/>is<sp/>that<sp/>same<sp/>thing<sp/>as<sp/>the<sp/>normal&apos;s<sp/>(X,<sp/>Y,<sp/>Z).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>calculate<sp/>magnitude<sp/>you<sp/>use<sp/>the<sp/>equation:<sp/><sp/>magnitude<sp/>=<sp/>sqrt(<sp/>x^2<sp/>+<sp/>y^2<sp/>+<sp/>z^2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>magnitude<sp/>=<sp/>(float)sqrt(<sp/>frustum[side][A]<sp/>*<sp/>frustum[side][A]<sp/>+</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustum[side][B]<sp/>*<sp/>frustum[side][B]<sp/>+</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frustum[side][C]<sp/>*<sp/>frustum[side][C]<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>we<sp/>divide<sp/>the<sp/>plane&apos;s<sp/>values<sp/>by<sp/>it&apos;s<sp/>magnitude.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>makes<sp/>it<sp/>easier<sp/>to<sp/>work<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>frustum[side][A]<sp/>/=<sp/>magnitude;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>frustum[side][B]<sp/>/=<sp/>magnitude;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>frustum[side][C]<sp/>/=<sp/>magnitude;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>frustum[side][D]<sp/>/=<sp/>magnitude;</highlight></codeline>
<codeline lineno="58"><highlight class="normal">}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="class_c_frustum_1a9c1738062b94376ab2b754bfd6b4c363" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_c_frustum_1a9c1738062b94376ab2b754bfd6b4c363" kindref="member">CFrustum::CalculateFrustum</ref>(glm::mat4<sp/>ProjectionMatrix,<sp/>glm::mat4<sp/>ModelMatrix)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>proj[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>hold<sp/>our<sp/>projection<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>modl[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>hold<sp/>our<sp/>modelview<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/>clip[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>hold<sp/>the<sp/>clipping<sp/>planes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>glGetFloatv()<sp/>is<sp/>used<sp/>to<sp/>extract<sp/>information<sp/>about<sp/>our<sp/>OpenGL<sp/>world.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Below,<sp/>we<sp/>pass<sp/>in<sp/>GL_PROJECTION_MATRIX<sp/>to<sp/>abstract<sp/>our<sp/>projection<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>then<sp/>stores<sp/>the<sp/>matrix<sp/>into<sp/>an<sp/>array<sp/>of<sp/>[16].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>4<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>4<sp/>;<sp/>j++)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj[j+(4*i)]<sp/>=<sp/>ProjectionMatrix[i][j];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>By<sp/>passing<sp/>in<sp/>GL_MODELVIEW_MATRIX,<sp/>we<sp/>can<sp/>abstract<sp/>our<sp/>model<sp/>view<sp/>matrix.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>also<sp/>stores<sp/>it<sp/>in<sp/>an<sp/>array<sp/>of<sp/>[16].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>4<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0<sp/>;<sp/>j<sp/>&lt;<sp/>4<sp/>;<sp/>j++)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modl[j+(4*i)]<sp/>=<sp/>ModelMatrix[i][j];</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>we<sp/>have<sp/>our<sp/>modelview<sp/>and<sp/>projection<sp/>matrix,<sp/>if<sp/>we<sp/>combine<sp/>these<sp/>2<sp/>matrices,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>give<sp/>us<sp/>our<sp/>clipping<sp/>planes.<sp/><sp/>To<sp/>combine<sp/>2<sp/>matrices,<sp/>we<sp/>multiply<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>0]<sp/>=<sp/>modl[<sp/>0]<sp/>*<sp/>proj[<sp/>0]<sp/>+<sp/>modl[<sp/>1]<sp/>*<sp/>proj[<sp/>4]<sp/>+<sp/>modl[<sp/>2]<sp/>*<sp/>proj[<sp/>8]<sp/>+<sp/>modl[<sp/>3]<sp/>*<sp/>proj[12];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>1]<sp/>=<sp/>modl[<sp/>0]<sp/>*<sp/>proj[<sp/>1]<sp/>+<sp/>modl[<sp/>1]<sp/>*<sp/>proj[<sp/>5]<sp/>+<sp/>modl[<sp/>2]<sp/>*<sp/>proj[<sp/>9]<sp/>+<sp/>modl[<sp/>3]<sp/>*<sp/>proj[13];</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>2]<sp/>=<sp/>modl[<sp/>0]<sp/>*<sp/>proj[<sp/>2]<sp/>+<sp/>modl[<sp/>1]<sp/>*<sp/>proj[<sp/>6]<sp/>+<sp/>modl[<sp/>2]<sp/>*<sp/>proj[10]<sp/>+<sp/>modl[<sp/>3]<sp/>*<sp/>proj[14];</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>3]<sp/>=<sp/>modl[<sp/>0]<sp/>*<sp/>proj[<sp/>3]<sp/>+<sp/>modl[<sp/>1]<sp/>*<sp/>proj[<sp/>7]<sp/>+<sp/>modl[<sp/>2]<sp/>*<sp/>proj[11]<sp/>+<sp/>modl[<sp/>3]<sp/>*<sp/>proj[15];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>4]<sp/>=<sp/>modl[<sp/>4]<sp/>*<sp/>proj[<sp/>0]<sp/>+<sp/>modl[<sp/>5]<sp/>*<sp/>proj[<sp/>4]<sp/>+<sp/>modl[<sp/>6]<sp/>*<sp/>proj[<sp/>8]<sp/>+<sp/>modl[<sp/>7]<sp/>*<sp/>proj[12];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>5]<sp/>=<sp/>modl[<sp/>4]<sp/>*<sp/>proj[<sp/>1]<sp/>+<sp/>modl[<sp/>5]<sp/>*<sp/>proj[<sp/>5]<sp/>+<sp/>modl[<sp/>6]<sp/>*<sp/>proj[<sp/>9]<sp/>+<sp/>modl[<sp/>7]<sp/>*<sp/>proj[13];</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>6]<sp/>=<sp/>modl[<sp/>4]<sp/>*<sp/>proj[<sp/>2]<sp/>+<sp/>modl[<sp/>5]<sp/>*<sp/>proj[<sp/>6]<sp/>+<sp/>modl[<sp/>6]<sp/>*<sp/>proj[10]<sp/>+<sp/>modl[<sp/>7]<sp/>*<sp/>proj[14];</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>7]<sp/>=<sp/>modl[<sp/>4]<sp/>*<sp/>proj[<sp/>3]<sp/>+<sp/>modl[<sp/>5]<sp/>*<sp/>proj[<sp/>7]<sp/>+<sp/>modl[<sp/>6]<sp/>*<sp/>proj[11]<sp/>+<sp/>modl[<sp/>7]<sp/>*<sp/>proj[15];</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>8]<sp/>=<sp/>modl[<sp/>8]<sp/>*<sp/>proj[<sp/>0]<sp/>+<sp/>modl[<sp/>9]<sp/>*<sp/>proj[<sp/>4]<sp/>+<sp/>modl[10]<sp/>*<sp/>proj[<sp/>8]<sp/>+<sp/>modl[11]<sp/>*<sp/>proj[12];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[<sp/>9]<sp/>=<sp/>modl[<sp/>8]<sp/>*<sp/>proj[<sp/>1]<sp/>+<sp/>modl[<sp/>9]<sp/>*<sp/>proj[<sp/>5]<sp/>+<sp/>modl[10]<sp/>*<sp/>proj[<sp/>9]<sp/>+<sp/>modl[11]<sp/>*<sp/>proj[13];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[10]<sp/>=<sp/>modl[<sp/>8]<sp/>*<sp/>proj[<sp/>2]<sp/>+<sp/>modl[<sp/>9]<sp/>*<sp/>proj[<sp/>6]<sp/>+<sp/>modl[10]<sp/>*<sp/>proj[10]<sp/>+<sp/>modl[11]<sp/>*<sp/>proj[14];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[11]<sp/>=<sp/>modl[<sp/>8]<sp/>*<sp/>proj[<sp/>3]<sp/>+<sp/>modl[<sp/>9]<sp/>*<sp/>proj[<sp/>7]<sp/>+<sp/>modl[10]<sp/>*<sp/>proj[11]<sp/>+<sp/>modl[11]<sp/>*<sp/>proj[15];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[12]<sp/>=<sp/>modl[12]<sp/>*<sp/>proj[<sp/>0]<sp/>+<sp/>modl[13]<sp/>*<sp/>proj[<sp/>4]<sp/>+<sp/>modl[14]<sp/>*<sp/>proj[<sp/>8]<sp/>+<sp/>modl[15]<sp/>*<sp/>proj[12];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[13]<sp/>=<sp/>modl[12]<sp/>*<sp/>proj[<sp/>1]<sp/>+<sp/>modl[13]<sp/>*<sp/>proj[<sp/>5]<sp/>+<sp/>modl[14]<sp/>*<sp/>proj[<sp/>9]<sp/>+<sp/>modl[15]<sp/>*<sp/>proj[13];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[14]<sp/>=<sp/>modl[12]<sp/>*<sp/>proj[<sp/>2]<sp/>+<sp/>modl[13]<sp/>*<sp/>proj[<sp/>6]<sp/>+<sp/>modl[14]<sp/>*<sp/>proj[10]<sp/>+<sp/>modl[15]<sp/>*<sp/>proj[14];</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>clip[15]<sp/>=<sp/>modl[12]<sp/>*<sp/>proj[<sp/>3]<sp/>+<sp/>modl[13]<sp/>*<sp/>proj[<sp/>7]<sp/>+<sp/>modl[14]<sp/>*<sp/>proj[11]<sp/>+<sp/>modl[15]<sp/>*<sp/>proj[15];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>we<sp/>actually<sp/>want<sp/>to<sp/>get<sp/>the<sp/>sides<sp/>of<sp/>the<sp/>frustum.<sp/><sp/>To<sp/>do<sp/>this<sp/>we<sp/>take</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>clipping<sp/>planes<sp/>we<sp/>received<sp/>above<sp/>and<sp/>extract<sp/>the<sp/>sides<sp/>from<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>extract<sp/>the<sp/>RIGHT<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[RIGHT][A]<sp/>=<sp/>clip[<sp/>3]<sp/>-<sp/>clip[<sp/>0];</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[RIGHT][B]<sp/>=<sp/>clip[<sp/>7]<sp/>-<sp/>clip[<sp/>4];</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[RIGHT][C]<sp/>=<sp/>clip[11]<sp/>-<sp/>clip[<sp/>8];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[RIGHT][D]<sp/>=<sp/>clip[15]<sp/>-<sp/>clip[12];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>that<sp/>we<sp/>have<sp/>a<sp/>normal<sp/>(A,B,C)<sp/>and<sp/>a<sp/>distance<sp/>(D)<sp/>to<sp/>the<sp/>plane,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>to<sp/>normalize<sp/>that<sp/>normal<sp/>and<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>the<sp/>RIGHT<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>NormalizePlane(m_Frustum,<sp/>RIGHT);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>extract<sp/>the<sp/>LEFT<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[LEFT][A]<sp/>=<sp/>clip[<sp/>3]<sp/>+<sp/>clip[<sp/>0];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[LEFT][B]<sp/>=<sp/>clip[<sp/>7]<sp/>+<sp/>clip[<sp/>4];</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[LEFT][C]<sp/>=<sp/>clip[11]<sp/>+<sp/>clip[<sp/>8];</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[LEFT][D]<sp/>=<sp/>clip[15]<sp/>+<sp/>clip[12];</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>the<sp/>LEFT<sp/>side</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>NormalizePlane(m_Frustum,<sp/>LEFT);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>extract<sp/>the<sp/>BOTTOM<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[BOTTOM][A]<sp/>=<sp/>clip[<sp/>3]<sp/>+<sp/>clip[<sp/>1];</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[BOTTOM][B]<sp/>=<sp/>clip[<sp/>7]<sp/>+<sp/>clip[<sp/>5];</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[BOTTOM][C]<sp/>=<sp/>clip[11]<sp/>+<sp/>clip[<sp/>9];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[BOTTOM][D]<sp/>=<sp/>clip[15]<sp/>+<sp/>clip[13];</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>NormalizePlane(m_Frustum,<sp/>BOTTOM);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[TOP][A]<sp/>=<sp/>clip[<sp/>3]<sp/>-<sp/>clip[<sp/>1];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[TOP][B]<sp/>=<sp/>clip[<sp/>7]<sp/>-<sp/>clip[<sp/>5];</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[TOP][C]<sp/>=<sp/>clip[11]<sp/>-<sp/>clip[<sp/>9];</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[TOP][D]<sp/>=<sp/>clip[15]<sp/>-<sp/>clip[13];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>NormalizePlane(m_Frustum,<sp/>TOP);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[BACK][A]<sp/>=<sp/>clip[<sp/>3]<sp/>-<sp/>clip[<sp/>2];</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[BACK][B]<sp/>=<sp/>clip[<sp/>7]<sp/>-<sp/>clip[<sp/>6];</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[BACK][C]<sp/>=<sp/>clip[11]<sp/>-<sp/>clip[10];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[BACK][D]<sp/>=<sp/>clip[15]<sp/>-<sp/>clip[14];</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>NormalizePlane(m_Frustum,<sp/>BACK);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>will<sp/>extract<sp/>the<sp/>FRONT<sp/>side<sp/>of<sp/>the<sp/>frustum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[FRONT][A]<sp/>=<sp/>clip[<sp/>3]<sp/>+<sp/>clip[<sp/>2];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[FRONT][B]<sp/>=<sp/>clip[<sp/>7]<sp/>+<sp/>clip[<sp/>6];</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[FRONT][C]<sp/>=<sp/>clip[11]<sp/>+<sp/>clip[10];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Frustum[FRONT][D]<sp/>=<sp/>clip[15]<sp/>+<sp/>clip[14];</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>NormalizePlane(m_Frustum,<sp/>FRONT);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_c_frustum_1aff4dd14b8d2528621030756d21e37d7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_frustum_1aff4dd14b8d2528621030756d21e37d7f" kindref="member">CFrustum::PointInFrustum</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z<sp/>+<sp/>m_Frustum[i][D]<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="class_c_frustum_1af05ef901019c29f46d145c6ebe6ea62c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_frustum_1af05ef901019c29f46d145c6ebe6ea62c" kindref="member">CFrustum::SphereInFrustum</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>radius<sp/>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_Frustum[i][A]<sp/>*<sp/>x<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z<sp/>+<sp/>m_Frustum[i][D]<sp/>&lt;=<sp/>-radius<sp/>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="class_c_frustum_1a02d4b3e95c33f9f83fc4104a3f5363e5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_frustum_1a02d4b3e95c33f9f83fc4104a3f5363e5" kindref="member">CFrustum::CubeInFrustum</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>size<sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>(x<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>(y<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>(z<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>(x<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>(y<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>(z<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>(x<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>(y<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>(z<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>(x<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>(y<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>(z<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>(x<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>(y<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>(z<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>(x<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>(y<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>(z<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>(x<sp/>-<sp/>size)<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>(y<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>(z<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>(x<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>(y<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>(z<sp/>+<sp/>size)<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="class_c_frustum_1a06155e722ef85cce62f65d8667cf41fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_frustum_1a06155e722ef85cce62f65d8667cf41fb" kindref="member">CFrustum::BoxInFrustum</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z2)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x<sp/><sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z<sp/><sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x2<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z<sp/><sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x<sp/><sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y2<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z<sp/><sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x2<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y2<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z<sp/><sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x<sp/><sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z2<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x2<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z2<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x<sp/><sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y2<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z2<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>x2<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>y2<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>z2<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="class_c_frustum_1a34e0f4eee50fa86ab4dfbdb2b1a78264" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_c_frustum_1a06155e722ef85cce62f65d8667cf41fb" kindref="member">CFrustum::BoxInFrustum</ref>(<sp/><ref refid="struct_m_i_n___m_a_x___p_o_i_n_t_s" kindref="compound">MIN_MAX_POINTS</ref><sp/>points)</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>6;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>points.MAX_X<sp/><sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>points.MAX_Y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>points.MAX_Z<sp/><sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>points.MIN_X<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>points.MAX_Y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>points.MAX_Z<sp/><sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>points.MAX_X<sp/><sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>points.MIN_Y<sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>points.MAX_Z<sp/><sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>points.MIN_X<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>points.MIN_Y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>points.MAX_Z<sp/><sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>points.MAX_X<sp/><sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>points.MAX_Y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>points.MIN_Z<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>points.MIN_X<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>points.MAX_Y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>points.MIN_Z<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>points.MAX_X<sp/><sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>points.MIN_Y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>points.MIN_Z<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Frustum[i][A]<sp/>*<sp/>points.MIN_X<sp/>+<sp/>m_Frustum[i][B]<sp/>*<sp/>points.MIN_Y<sp/><sp/>+<sp/>m_Frustum[i][C]<sp/>*<sp/>points.MIN_Z<sp/>+<sp/>m_Frustum[i][D]<sp/>&gt;<sp/>0)<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Epsilon/Epsilon Engine/src/Frustum.cpp"/>
  </compounddef>
</doxygen>
