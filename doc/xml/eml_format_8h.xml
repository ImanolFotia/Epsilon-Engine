<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="eml_format_8h" kind="file" language="C++">
    <compoundname>emlFormat.h</compoundname>
    <includes local="no">string</includes>
    <includedby refid="_mesh_8h" local="no">D:/Epsilon/Epsilon Engine/include/Mesh.h</includedby>
    <includedby refid="_model_8h" local="no">D:/Epsilon/Epsilon Engine/include/Model.h</includedby>
    <incdepgraph>
      <node id="148">
        <label>string</label>
      </node>
      <node id="147">
        <label>D:/Epsilon/Epsilon Engine/include/emlFormat.h</label>
        <link refid="emlFormat.h"/>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="156">
        <label>D:/Epsilon/Epsilon Engine/include/Scene.h</label>
        <link refid="_scene_8h_source"/>
        <childnode refid="154" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>D:/Epsilon/Epsilon Engine/include/Frustum.h</label>
        <link refid="_frustum_8h_source"/>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>D:/Epsilon/Epsilon Engine/include/EntityTemplate.h</label>
        <link refid="_entity_template_8h_source"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>D:/Epsilon/Epsilon Engine/include/Epsilon.h</label>
        <link refid="_epsilon_8h_source"/>
        <childnode refid="155" relation="include">
        </childnode>
      </node>
      <node id="159">
        <label>D:/Epsilon/Epsilon Engine/include/ResourceManager.h</label>
        <link refid="_resource_manager_8h_source"/>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>D:/Epsilon/Epsilon Engine/include/emlFormat.h</label>
        <link refid="emlFormat.h"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>D:/Epsilon/Epsilon Engine/include/Skybox.h</label>
        <link refid="_skybox_8h_source"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>D:/Epsilon/Epsilon Engine/include/BSP.h</label>
        <link refid="_b_s_p_8h_source"/>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>D:/Epsilon/Epsilon Engine/include/Model.h</label>
        <link refid="_model_8h_source"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="159" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
      </node>
      <node id="150">
        <label>D:/Epsilon/Epsilon Engine/include/Mesh.h</label>
        <link refid="_mesh_8h_source"/>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="155">
        <label>D:/Epsilon/Epsilon Engine/include/main.h</label>
        <link refid="main_8h_source"/>
      </node>
      <node id="157">
        <label>D:/Epsilon/Epsilon Engine/include/Component.h</label>
        <link refid="_component_8h_source"/>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structt__eml__header" prot="public">t_eml_header</innerclass>
    <innerclass refid="structt___lumps" prot="public">t_Lumps</innerclass>
    <innerclass refid="structt___position" prot="public">t_Position</innerclass>
    <innerclass refid="structt___normal" prot="public">t_Normal</innerclass>
    <innerclass refid="structt___tangent" prot="public">t_Tangent</innerclass>
    <innerclass refid="structt___bitangent" prot="public">t_Bitangent</innerclass>
    <innerclass refid="structt___index" prot="public">t_Index</innerclass>
    <innerclass refid="structt___tex_coord" prot="public">t_TexCoord</innerclass>
    <innerclass refid="structt___vertex" prot="public">t_Vertex</innerclass>
    <innerclass refid="structt___mesh" prot="public">t_Mesh</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="eml_format_8h_1a13b4b2fb52947b84017fdee1146bc6cd" prot="public" static="no">
        <name>EMLHEADER</name>
        <initializer>((&apos;L&apos;&lt;&lt;24)+(&apos;M&apos;&lt;&lt;16)+(&apos;E&apos;&lt;&lt;8)+&apos;S&apos;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/emlFormat.h" line="4" column="9" bodyfile="D:/Epsilon/Epsilon Engine/include/emlFormat.h" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="eml_format_8h_1a668cdd88576293f73920eb4c50a71446" prot="public" static="no">
        <name>emlLumps</name>
        <enumvalue id="eml_format_8h_1a668cdd88576293f73920eb4c50a71446a295108936ab07d38976185720defefd4" prot="public">
          <name>lVertices</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="eml_format_8h_1a668cdd88576293f73920eb4c50a71446afa6dd098ddb4cc088fb604f4dc6f7712" prot="public">
          <name>lIndices</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="eml_format_8h_1a668cdd88576293f73920eb4c50a71446a61b67773e7f96b619f86bdaf6b66b292" prot="public">
          <name>lMeshes</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/emlFormat.h" line="9" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/emlFormat.h" bodystart="8" bodyend="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="eml_format_8h_1a2de3d5a9be5e3e9082f4b4cb9c214569" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int maxLumps</definition>
        <argsstring></argsstring>
        <name>maxLumps</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/emlFormat.h" line="6" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/emlFormat.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="eml_format_8h_1a2c0aa4365e7d780a52144b87a975a0c4" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float emlVersion</definition>
        <argsstring></argsstring>
        <name>emlVersion</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/emlFormat.h" line="7" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/emlFormat.h" bodystart="7" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Format<sp/>identifier<sp/>must<sp/>always<sp/>be<sp/>0x53454D4C<sp/>||<sp/>SEML</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMLHEADER<sp/>((&apos;L&apos;&lt;&lt;24)+(&apos;M&apos;&lt;&lt;16)+(&apos;E&apos;&lt;&lt;8)+&apos;S&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLumps<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>emlVersion<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>emlLumps</highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>lVertices<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>lIndices,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>lMeshes</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal">};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="structt__eml__header" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt__eml__header" kindref="compound">t_eml_header</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>version;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLumps;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numOfMeshes;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="structt___lumps" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___lumps" kindref="compound">t_Lumps</ref></highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="structt___position" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___position" kindref="compound">t_Position</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="structt___normal" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___normal" kindref="compound">t_Normal</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structt___tangent" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___tangent" kindref="compound">t_Tangent</ref></highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">};</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="structt___bitangent" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___bitangent" kindref="compound">t_Bitangent</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structt___index" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___index" kindref="compound">t_Index</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="structt___tex_coord" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___tex_coord" kindref="compound">t_TexCoord</ref></highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structt___vertex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___vertex" kindref="compound">t_Vertex</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt___position" kindref="compound">t_Position</ref><sp/>position;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt___tex_coord" kindref="compound">t_TexCoord</ref><sp/>texcoord;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt___normal" kindref="compound">t_Normal</ref><sp/>normal;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt___tangent" kindref="compound">t_Tangent</ref><sp/>tangent;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structt___bitangent" kindref="compound">t_Bitangent</ref><sp/>bitangent;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">};</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structt___mesh" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structt___mesh" kindref="compound">t_Mesh</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>mMaterial[4][100]<sp/>=<sp/>{{0}};</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mNumVertices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mFirstVertex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mNumIndices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mFirstIndex<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="D:/Epsilon/Epsilon Engine/include/emlFormat.h"/>
  </compounddef>
</doxygen>
