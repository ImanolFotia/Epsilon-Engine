<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_terrain" kind="class" language="C++" prot="public">
    <compoundname>Terrain</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_terrain_1a568d54e8c4101460b0a56c3b2e84f342" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::GL_d_texture</definition>
        <argsstring></argsstring>
        <name>GL_d_texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="62" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a797f5c8fedc26d777e0de28aca699ee7" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::GL_n_texture</definition>
        <argsstring></argsstring>
        <name>GL_n_texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="63" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1aa8c684d117fcfc65508b1c1128fe4713" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::GL_s_texture</definition>
        <argsstring></argsstring>
        <name>GL_s_texture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="64" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a2db5ac7ab4a86b1626cf1bb2547b6223" prot="private" static="no" mutable="no">
        <type>unsigned char *</type>
        <definition>unsigned char* Terrain::pixels</definition>
        <argsstring></argsstring>
        <name>pixels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="65" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1aea8063151504627c1553c67f2cae4e85" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* Terrain::diffuseTexture</definition>
        <argsstring></argsstring>
        <name>diffuseTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="66" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a4144703741a233c10612344e7fe54422" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* Terrain::specularTexture</definition>
        <argsstring></argsstring>
        <name>specularTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="67" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a25e17373d2b2c0f4865e56637e78ee67" prot="private" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* Terrain::heightMap</definition>
        <argsstring></argsstring>
        <name>heightMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="68" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a53beea1f5b3421259bc95845fccc7c44" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Terrain::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="69" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a84f602380b338d47c2ec1274e7ab4465" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Terrain::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="70" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a4e0b6f75a17b5fdb2e897b821504c100" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Terrain::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="71" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a91cbb1e7ce044c9cd954774010671351" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Terrain::gridSize</definition>
        <argsstring></argsstring>
        <name>gridSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="72" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a9d021ee35f1c43586f07139a7525099d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Terrain::cantPixels</definition>
        <argsstring></argsstring>
        <name>cantPixels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="73" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1aa5edb5d16ab55b9a7661b0df10ea0605" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::VAO</definition>
        <argsstring></argsstring>
        <name>VAO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="76" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a7846c72d0f1d4c69107c24a8ae4a0e84" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::EBO</definition>
        <argsstring></argsstring>
        <name>EBO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="77" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a160dde79aabfb5ce77c23b99fb3e76a7" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::VBO</definition>
        <argsstring></argsstring>
        <name>VBO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="78" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a005f02aea6b4369fa3847db53269d7c6" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::NVB</definition>
        <argsstring></argsstring>
        <name>NVB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="79" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a34e83636a1779604422c1e3155d4b012" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::TVB</definition>
        <argsstring></argsstring>
        <name>TVB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="80" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a1ab2fe57f2793c3fc047a96208fd1272" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint Terrain::BVB</definition>
        <argsstring></argsstring>
        <name>BVB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="81" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a90f3be9144c16a6dd16edf6e35dfc2c0" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_face" kindref="compound">Face</ref> &gt;</type>
        <definition>std::vector&lt;Face&gt; Terrain::vface</definition>
        <argsstring></argsstring>
        <name>vface</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="84" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a88f96e1a232ab0988374c8dab5a4811b" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_t_vertex" kindref="compound">TVertex</ref> &gt;</type>
        <definition>std::vector&lt;TVertex&gt; Terrain::vertices</definition>
        <argsstring></argsstring>
        <name>vertices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="85" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1ad8ada99be8e666e8407562007a99fa8c" prot="private" static="no" mutable="no">
        <type>std::vector&lt; GLuint &gt;</type>
        <definition>std::vector&lt;GLuint&gt; Terrain::indices</definition>
        <argsstring></argsstring>
        <name>indices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="86" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a95c393e7d83331da0a58918c579a0768" prot="private" static="no" mutable="no">
        <type>std::vector&lt; glm::vec3 &gt;</type>
        <definition>std::vector&lt;glm::vec3&gt; Terrain::Normals</definition>
        <argsstring></argsstring>
        <name>Normals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="87" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1abf5870deb992df26119b3913368fc944" prot="private" static="no" mutable="no">
        <type>std::vector&lt; glm::vec3 &gt;</type>
        <definition>std::vector&lt;glm::vec3&gt; Terrain::Tangents</definition>
        <argsstring></argsstring>
        <name>Tangents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="88" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_terrain_1a6fbe9cd7e312c34b737222df1781e951" prot="private" static="no" mutable="no">
        <type>std::vector&lt; glm::vec3 &gt;</type>
        <definition>std::vector&lt;glm::vec3&gt; Terrain::Bitangents</definition>
        <argsstring></argsstring>
        <name>Bitangents</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="89" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_terrain_1ab3ca56622a5481e4e45cbc179e2f0479" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Terrain::Terrain</definition>
        <argsstring>(const char *, const char *, float, int)</argsstring>
        <name>Terrain</name>
        <param>
          <type>const char *</type>
          <defname>heightMap</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>diffuseTexture</defname>
        </param>
        <param>
          <type>float</type>
          <defname>scale</defname>
        </param>
        <param>
          <type>int</type>
          <defname>gridSize</defname>
          <briefdescription><para>Must be Power of two </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>========= Copyright Survtech, All rights reserved. ============//</para><para>Purpose: <hruler/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="35" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="14" bodyend="32"/>
        <references refid="class_terrain_1a7e77d9afe77e6dd620bf75b5fe78d2e5" compoundref="_terrain_8cpp" startline="254" endline="306">GenerateVertexBuffers</references>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a773721198ddf5c39119ba6f624e0affc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Terrain::Terrain</definition>
        <argsstring>(const char *, const char *, const char *, float, int)</argsstring>
        <name>Terrain</name>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>const char *</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a7a3a35d6642c98144e46b181ae639c73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Terrain::Terrain</definition>
        <argsstring>(const char *, const char *, const char *, const char *, float, int)</argsstring>
        <name>Terrain</name>
        <param>
          <type>const char *</type>
          <defname>heightMap</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>diffuseTexture</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>normalTexture</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>specularTexture</defname>
        </param>
        <param>
          <type>float</type>
          <defname>scale</defname>
        </param>
        <param>
          <type>int</type>
          <defname>gridSize</defname>
          <briefdescription><para>Must be Power of two </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="37" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="34" bodyend="52"/>
        <references refid="class_terrain_1a7e77d9afe77e6dd620bf75b5fe78d2e5" compoundref="_terrain_8cpp" startline="254" endline="306">GenerateVertexBuffers</references>
        <references refid="struct_t_vertex_1ac1054ca64a31d133466e8c6b8a269159" compoundref="_terrain_8h" startline="19">TVertex::Position</references>
        <references refid="struct_t_vertex_1a937c3a7240256ad08cdc3a122b86e394" compoundref="_terrain_8h" startline="21">TVertex::TexCoords</references>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a5ad8062447570cf7bf21b4f03a7fc807" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Terrain::~Terrain</definition>
        <argsstring>()</argsstring>
        <name>~Terrain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="39" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a6cf30a9183c0c4f8db0dd320d2302a46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Terrain::RenderTerrain</definition>
        <argsstring>(Shader *)</argsstring>
        <name>RenderTerrain</name>
        <param>
          <type><ref refid="class_shader" kindref="compound">Shader</ref> *</type>
          <defname>shader</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="48" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="308" bodyend="332"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_terrain_1aff2d55c6ee9b121d7415a79200b73d19" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Terrain::GenerateSmoothNormals</definition>
        <argsstring>()</argsstring>
        <name>GenerateSmoothNormals</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a7e77d9afe77e6dd620bf75b5fe78d2e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Terrain::GenerateVertexBuffers</definition>
        <argsstring>()</argsstring>
        <name>GenerateVertexBuffers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para><ref refid="struct_vertex" kindref="compound">Vertex</ref> And UV buffer Attachments</para><para>Normal buffer Attachments</para><para>Normal buffer Attachments</para><para>Normal buffer Attachments</para><para>Element buffer Attachments </para>        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="53" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="254" bodyend="306"/>
        <referencedby refid="class_terrain_1ab3ca56622a5481e4e45cbc179e2f0479" compoundref="_terrain_8cpp" startline="14" endline="32">Terrain</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a55ebd220a1a01d21dd4eec91a0ba4720" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Terrain::GetHeightData</definition>
        <argsstring>()</argsstring>
        <name>GetHeightData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="54" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="54" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1afc561cc3fa4c0fffd18fe8fc6d8dc76e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Terrain::GenerateGrid</definition>
        <argsstring>()</argsstring>
        <name>GenerateGrid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="55" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="71" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a16aea22e901e7bb2dce78010016892a6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Terrain::LoadTexture</definition>
        <argsstring>()</argsstring>
        <name>LoadTexture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a01f32fb73f1ee8b218854faa642fca53" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Terrain::LoadTexture</definition>
        <argsstring>(const char *)</argsstring>
        <name>LoadTexture</name>
        <param>
          <type>const char *</type>
          <defname>diff</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="57" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="218" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a4744141ef87c7eb99fc70de2a2efadfa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Terrain::LoadTexture</definition>
        <argsstring>(const char *, const char *, const char *)</argsstring>
        <name>LoadTexture</name>
        <param>
          <type>const char *</type>
          <defname>diff</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>normal</defname>
        </param>
        <param>
          <type>const char *</type>
          <defname>specular</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="58" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="232" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_terrain_1a935fd7063c832bfb422a49edefa87329" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Terrain::calculateTangentSpace</definition>
        <argsstring>()</argsstring>
        <name>calculateTangentSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="59" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Terrain.cpp" bodystart="172" bodyend="216"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Epsilon/Epsilon Engine/include/Terrain.h" line="32" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Terrain.h" bodystart="31" bodyend="90"/>
    <listofallmembers>
      <member refid="class_terrain_1a6fbe9cd7e312c34b737222df1781e951" prot="private" virt="non-virtual"><scope>Terrain</scope><name>Bitangents</name></member>
      <member refid="class_terrain_1a1ab2fe57f2793c3fc047a96208fd1272" prot="private" virt="non-virtual"><scope>Terrain</scope><name>BVB</name></member>
      <member refid="class_terrain_1a935fd7063c832bfb422a49edefa87329" prot="private" virt="non-virtual"><scope>Terrain</scope><name>calculateTangentSpace</name></member>
      <member refid="class_terrain_1a9d021ee35f1c43586f07139a7525099d" prot="private" virt="non-virtual"><scope>Terrain</scope><name>cantPixels</name></member>
      <member refid="class_terrain_1a4e0b6f75a17b5fdb2e897b821504c100" prot="private" virt="non-virtual"><scope>Terrain</scope><name>channels</name></member>
      <member refid="class_terrain_1aea8063151504627c1553c67f2cae4e85" prot="private" virt="non-virtual"><scope>Terrain</scope><name>diffuseTexture</name></member>
      <member refid="class_terrain_1a7846c72d0f1d4c69107c24a8ae4a0e84" prot="private" virt="non-virtual"><scope>Terrain</scope><name>EBO</name></member>
      <member refid="class_terrain_1afc561cc3fa4c0fffd18fe8fc6d8dc76e" prot="private" virt="non-virtual"><scope>Terrain</scope><name>GenerateGrid</name></member>
      <member refid="class_terrain_1aff2d55c6ee9b121d7415a79200b73d19" prot="private" virt="non-virtual"><scope>Terrain</scope><name>GenerateSmoothNormals</name></member>
      <member refid="class_terrain_1a7e77d9afe77e6dd620bf75b5fe78d2e5" prot="private" virt="non-virtual"><scope>Terrain</scope><name>GenerateVertexBuffers</name></member>
      <member refid="class_terrain_1a55ebd220a1a01d21dd4eec91a0ba4720" prot="private" virt="non-virtual"><scope>Terrain</scope><name>GetHeightData</name></member>
      <member refid="class_terrain_1a568d54e8c4101460b0a56c3b2e84f342" prot="private" virt="non-virtual"><scope>Terrain</scope><name>GL_d_texture</name></member>
      <member refid="class_terrain_1a797f5c8fedc26d777e0de28aca699ee7" prot="private" virt="non-virtual"><scope>Terrain</scope><name>GL_n_texture</name></member>
      <member refid="class_terrain_1aa8c684d117fcfc65508b1c1128fe4713" prot="private" virt="non-virtual"><scope>Terrain</scope><name>GL_s_texture</name></member>
      <member refid="class_terrain_1a91cbb1e7ce044c9cd954774010671351" prot="private" virt="non-virtual"><scope>Terrain</scope><name>gridSize</name></member>
      <member refid="class_terrain_1a84f602380b338d47c2ec1274e7ab4465" prot="private" virt="non-virtual"><scope>Terrain</scope><name>height</name></member>
      <member refid="class_terrain_1a25e17373d2b2c0f4865e56637e78ee67" prot="private" virt="non-virtual"><scope>Terrain</scope><name>heightMap</name></member>
      <member refid="class_terrain_1ad8ada99be8e666e8407562007a99fa8c" prot="private" virt="non-virtual"><scope>Terrain</scope><name>indices</name></member>
      <member refid="class_terrain_1a16aea22e901e7bb2dce78010016892a6" prot="private" virt="non-virtual"><scope>Terrain</scope><name>LoadTexture</name></member>
      <member refid="class_terrain_1a01f32fb73f1ee8b218854faa642fca53" prot="private" virt="non-virtual"><scope>Terrain</scope><name>LoadTexture</name></member>
      <member refid="class_terrain_1a4744141ef87c7eb99fc70de2a2efadfa" prot="private" virt="non-virtual"><scope>Terrain</scope><name>LoadTexture</name></member>
      <member refid="class_terrain_1a95c393e7d83331da0a58918c579a0768" prot="private" virt="non-virtual"><scope>Terrain</scope><name>Normals</name></member>
      <member refid="class_terrain_1a005f02aea6b4369fa3847db53269d7c6" prot="private" virt="non-virtual"><scope>Terrain</scope><name>NVB</name></member>
      <member refid="class_terrain_1a2db5ac7ab4a86b1626cf1bb2547b6223" prot="private" virt="non-virtual"><scope>Terrain</scope><name>pixels</name></member>
      <member refid="class_terrain_1a6cf30a9183c0c4f8db0dd320d2302a46" prot="public" virt="non-virtual"><scope>Terrain</scope><name>RenderTerrain</name></member>
      <member refid="class_terrain_1a4144703741a233c10612344e7fe54422" prot="private" virt="non-virtual"><scope>Terrain</scope><name>specularTexture</name></member>
      <member refid="class_terrain_1abf5870deb992df26119b3913368fc944" prot="private" virt="non-virtual"><scope>Terrain</scope><name>Tangents</name></member>
      <member refid="class_terrain_1ab3ca56622a5481e4e45cbc179e2f0479" prot="public" virt="non-virtual"><scope>Terrain</scope><name>Terrain</name></member>
      <member refid="class_terrain_1a773721198ddf5c39119ba6f624e0affc" prot="public" virt="non-virtual"><scope>Terrain</scope><name>Terrain</name></member>
      <member refid="class_terrain_1a7a3a35d6642c98144e46b181ae639c73" prot="public" virt="non-virtual"><scope>Terrain</scope><name>Terrain</name></member>
      <member refid="class_terrain_1a34e83636a1779604422c1e3155d4b012" prot="private" virt="non-virtual"><scope>Terrain</scope><name>TVB</name></member>
      <member refid="class_terrain_1aa5edb5d16ab55b9a7661b0df10ea0605" prot="private" virt="non-virtual"><scope>Terrain</scope><name>VAO</name></member>
      <member refid="class_terrain_1a160dde79aabfb5ce77c23b99fb3e76a7" prot="private" virt="non-virtual"><scope>Terrain</scope><name>VBO</name></member>
      <member refid="class_terrain_1a88f96e1a232ab0988374c8dab5a4811b" prot="private" virt="non-virtual"><scope>Terrain</scope><name>vertices</name></member>
      <member refid="class_terrain_1a90f3be9144c16a6dd16edf6e35dfc2c0" prot="private" virt="non-virtual"><scope>Terrain</scope><name>vface</name></member>
      <member refid="class_terrain_1a53beea1f5b3421259bc95845fccc7c44" prot="private" virt="non-virtual"><scope>Terrain</scope><name>width</name></member>
      <member refid="class_terrain_1a5ad8062447570cf7bf21b4f03a7fc807" prot="public" virt="virtual"><scope>Terrain</scope><name>~Terrain</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
