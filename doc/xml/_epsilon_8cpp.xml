<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_epsilon_8cpp" kind="file" language="C++">
    <compoundname>Epsilon.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="_epsilon_8h" local="no">Epsilon.h</includes>
    <includes refid="_program_data_8h" local="no">ProgramData.h</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">time.h</includes>
    <includes refid="_includes_8h" local="no">Includes.h</includes>
    <includes refid="_types_8h" local="no">Types.h</includes>
    <includes local="yes">../version.h</includes>
    <includes local="no">glm/gtc/quaternion.hpp</includes>
    <includes local="no">cmath</includes>
    <includes local="no">thread</includes>
    <includes refid="_epsilon_memory_8h" local="no">EpsilonMemory.h</includes>
    <includes refid="_c_p_u_i_d_8h" local="no">CPUID.h</includes>
    <incdepgraph>
      <node id="893">
        <label>ShadowMapping.h</label>
        <link refid="_shadow_mapping_8h_source"/>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
      </node>
      <node id="871">
        <label>SOIL.h</label>
      </node>
      <node id="873">
        <label>Shader.h</label>
        <link refid="_shader_8h_source"/>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="924">
        <label>stdint.h</label>
      </node>
      <node id="894">
        <label>Water.h</label>
        <link refid="_water_8h_source"/>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="920">
        <label>cmath</label>
      </node>
      <node id="915">
        <label>Scene.h</label>
        <link refid="_scene_8h_source"/>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
      </node>
      <node id="869">
        <label>string</label>
      </node>
      <node id="901">
        <label>Frustum.h</label>
        <link refid="_frustum_8h_source"/>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
      </node>
      <node id="866">
        <label>GL/glew.h</label>
      </node>
      <node id="904">
        <label>EntityTemplate.h</label>
        <link refid="_entity_template_8h_source"/>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
      </node>
      <node id="865">
        <label>map</label>
      </node>
      <node id="867">
        <label>GLFW/glfw3.h</label>
      </node>
      <node id="864">
        <label>Epsilon.h</label>
        <link refid="_epsilon_8h_source"/>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
      </node>
      <node id="878">
        <label>glm/gtc/quaternion.hpp</label>
      </node>
      <node id="925">
        <label>exception</label>
      </node>
      <node id="868">
        <label>Texture.h</label>
        <link refid="_texture_8h_source"/>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
      </node>
      <node id="880">
        <label>fstream</label>
      </node>
      <node id="906">
        <label>ResourceManager.h</label>
        <link refid="_resource_manager_8h_source"/>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
      </node>
      <node id="913">
        <label>BulletDynamics/Character/btKinematicCharacterController.h</label>
      </node>
      <node id="890">
        <label>Terrain.h</label>
        <link refid="_terrain_8h_source"/>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
      </node>
      <node id="887">
        <label>btBulletCollisionCommon.h</label>
      </node>
      <node id="919">
        <label>../version.h</label>
      </node>
      <node id="923">
        <label>limits.h</label>
      </node>
      <node id="907">
        <label>CubeMap.h</label>
        <link refid="_cube_map_8h_source"/>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
      </node>
      <node id="895">
        <label>Sun.h</label>
        <link refid="_sun_8h_source"/>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
      </node>
      <node id="883">
        <label>emlFormat.h</label>
        <link refid="eml_format_8h_source"/>
        <childnode refid="869" relation="include">
        </childnode>
      </node>
      <node id="914">
        <label>typeinfo</label>
      </node>
      <node id="898">
        <label>cstdio</label>
      </node>
      <node id="862">
        <label>D:/Epsilon/Epsilon Engine/src/Epsilon.cpp</label>
        <link refid="Epsilon.cpp"/>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="864" relation="include">
        </childnode>
        <childnode refid="872" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="922" relation="include">
        </childnode>
      </node>
      <node id="891">
        <label>Grass.h</label>
        <link refid="_grass_8h_source"/>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
      </node>
      <node id="909">
        <label>ctime</label>
      </node>
      <node id="900">
        <label>BSPFace.h</label>
        <link refid="_b_s_p_face_8h_source"/>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
      </node>
      <node id="922">
        <label>CPUID.h</label>
        <link refid="_c_p_u_i_d_8h_source"/>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
      </node>
      <node id="903">
        <label>MD5_Anim.h</label>
        <link refid="_m_d5___anim_8h_source"/>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
      </node>
      <node id="870">
        <label>vector</label>
      </node>
      <node id="874">
        <label>Skybox.h</label>
        <link refid="_skybox_8h_source"/>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="910">
        <label>Physics.h</label>
        <link refid="_physics_8h_source"/>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
      </node>
      <node id="896">
        <label>BSP.h</label>
        <link refid="_b_s_p_8h_source"/>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
        <childnode refid="901" relation="include">
        </childnode>
      </node>
      <node id="881">
        <label>sstream</label>
      </node>
      <node id="889">
        <label>ft2build.h</label>
      </node>
      <node id="875">
        <label>camera.h</label>
        <link refid="camera_8h_source"/>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="867" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
      </node>
      <node id="885">
        <label>Types.h</label>
        <link refid="_types_8h_source"/>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
      </node>
      <node id="911">
        <label>EpsilonMemory.h</label>
        <link refid="_epsilon_memory_8h_source"/>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="918">
        <label>time.h</label>
      </node>
      <node id="897">
        <label>cstdlib</label>
      </node>
      <node id="863">
        <label>iostream</label>
      </node>
      <node id="879">
        <label>Model.h</label>
        <link refid="_model_8h_source"/>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="865" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="868" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
      </node>
      <node id="877">
        <label>glm/gtc/matrix_transform.hpp</label>
      </node>
      <node id="892">
        <label>PostProcess.h</label>
        <link refid="_post_process_8h_source"/>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="902">
        <label>MD5_Model.h</label>
        <link refid="_m_d5___model_8h_source"/>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="871" relation="include">
        </childnode>
      </node>
      <node id="882">
        <label>Mesh.h</label>
        <link refid="_mesh_8h_source"/>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="866" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="888">
        <label>Text.h</label>
        <link refid="_text_8h_source"/>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="873" relation="include">
        </childnode>
      </node>
      <node id="917">
        <label>glm/gtx/quaternion.hpp</label>
      </node>
      <node id="908">
        <label>Includes.h</label>
        <link refid="_includes_8h_source"/>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="869" relation="include">
        </childnode>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="870" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
      </node>
      <node id="921">
        <label>thread</label>
      </node>
      <node id="886">
        <label>btBulletDynamicsCommon.h</label>
      </node>
      <node id="912">
        <label>BulletCollision/CollisionDispatch/btGhostObject.h</label>
      </node>
      <node id="872">
        <label>ProgramData.h</label>
        <link refid="_program_data_8h_source"/>
      </node>
      <node id="916">
        <label>Light.h</label>
        <link refid="_light_8h_source"/>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
      </node>
      <node id="899">
        <label>cstring</label>
      </node>
      <node id="884">
        <label>memory</label>
      </node>
      <node id="905">
        <label>Component.h</label>
        <link refid="_component_8h_source"/>
        <childnode refid="863" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="879" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="884" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
      </node>
      <node id="876">
        <label>glm/glm.hpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_epsilon_8cpp_1a19e77ca2739221072d6dd648957a6f86" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float mpos</definition>
        <argsstring></argsstring>
        <name>mpos</name>
        <initializer>= -20.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>========= Copyright Survtech, All rights reserved. ============//</para><para>Purpose: <hruler/>
 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/src/Epsilon.cpp" line="21" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Epsilon.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_epsilon_8cpp_1a9ac2274b5c433a584adfb0f337eab980" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float blend</definition>
        <argsstring></argsstring>
        <name>blend</name>
        <initializer>= 1.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/src/Epsilon.cpp" line="22" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Epsilon.cpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_epsilon_8cpp_1aa54a57ae048476d840caf6d4d2c47aa3" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool visible</definition>
        <argsstring></argsstring>
        <name>visible</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/src/Epsilon.cpp" line="196" column="1" bodyfile="D:/Epsilon/Epsilon Engine/src/Epsilon.cpp" bodystart="196" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Epsilon.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ProgramData.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Includes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../version.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtc/quaternion.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;EpsilonMemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CPUID.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mpos<sp/>=<sp/>-20.0;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>blend<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">Epsilon::Epsilon(GLFWwindow*&amp;<sp/>win)</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>window<sp/>=<sp/>win;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>glClearColor(0.5f,<sp/>0.5f,<sp/>0.5f,<sp/>0.0f);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Gathering<sp/>Video<sp/>Device<sp/>information...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>std::<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OpenGL<sp/>VENDOR:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>glGetString(GL_VENDOR)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Video<sp/>RENDERER:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>glGetString(GL_RENDERER)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;OpenGL<sp/>VERSION:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>glGetString(GL_VERSION)<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_c_p_u_i_d" kindref="compound">CPUID</ref><sp/>cpu(0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cpu.printHardwareInformation();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSetInputMode(window,<sp/>GLFW_CURSOR,<sp/>GLFW_CURSOR_HIDDEN);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnable(GL_DEPTH_TEST);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glDepthFunc(GL_LESS);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnable(GL_MULTISAMPLE);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glShadeModel(GL_SMOOTH);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>normal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>Running<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>flashLight<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>hdr<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>parallax<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>exposure<sp/>=<sp/>3.0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>srand(time(NULL));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>EntityTemplate<sp/>ent(rM);</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Component::SpatialComponent&gt;<sp/>spa<sp/>=<sp/>((std::shared_ptr&lt;Component::SpatialComponent&gt;)<sp/>(new<sp/>Component::SpatialComponent()));</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>spa-&gt;Fill(10.0f,<sp/>glm::vec3(0));</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;SpatialComponent<sp/>Filled&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>ent.addComponent(spa);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::InitResources(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initializing<sp/>Resources...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_program_data" kindref="compound">ProgramData</ref><sp/>DATA;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_epsilon_1ad005199e74a13e0fc6dc1eb47416f073" kindref="member">WIDTH</ref><sp/>=<sp/>DATA.WINDOW_WIDTH;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;HEIGHT<sp/>=<sp/>DATA.WINDOW_HEIGHT;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SSAO<sp/>=<sp/>DATA.SSAO;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>eCamera<sp/>=<sp/>std::move((unique_ptr&lt;Camera&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_camera" kindref="compound">Camera</ref>(glm::vec3(20.0,<sp/>11.0,<sp/>2.0),<sp/>glm::vec3(0.0f,0.0f,0.0f))));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/>=<sp/>std::move((unique_ptr&lt;Text&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_text" kindref="compound">Text</ref>(</highlight><highlight class="stringliteral">&quot;resources/arial.ttf&quot;</highlight><highlight class="normal">,<sp/>DATA.WINDOW_WIDTH,<sp/>DATA.WINDOW_HEIGHT)));</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>PP<sp/>=<sp/>std::move((unique_ptr&lt;PostProcess&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_post_process" kindref="compound">PostProcess</ref>()));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>lightPositions.push_back(glm::vec3(-29,<sp/>4.5,<sp/>-11));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>lightPositions.push_back(glm::vec3(-29,<sp/>4.5,<sp/>11));</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>lightPositions.push_back(glm::vec3(29,<sp/>4.5,<sp/>11));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>lightPositions.push_back(glm::vec3(29,<sp/>4.5,<sp/>-11));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowMap<sp/>=<sp/>std::move((unique_ptr&lt;ShadowMap&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shadow_map" kindref="compound">ShadowMap</ref>(DATA.SHADOWMAP_SIZE,<sp/>DATA.SHADOWMAP_SIZE,<sp/>-20.0f,<sp/>80.0f)));</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>rM<sp/>=<sp/>((std::shared_ptr&lt;ResourceManager&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_resource_manager" kindref="compound">ResourceManager</ref>()));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;LoadShaders();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_epsilon_1a78c0240886a4a651bbd68f32a8a83bcb" kindref="member">LoadGeometry</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;LoadSound();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;loadQueuedTextures();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;All<sp/>Resources<sp/>Initialized.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::LoadShaders(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>Shaders...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;grass&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(<sp/></highlight><highlight class="stringliteral">&quot;shaders/grass.vglsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/grass.fglsl&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(</highlight><highlight class="stringliteral">&quot;shaders/Geometry.vglsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/Geometry.fglsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Terrain&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(<sp/></highlight><highlight class="stringliteral">&quot;shaders/testshader.vglsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/testshader.fglsl&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Sun&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(</highlight><highlight class="stringliteral">&quot;shaders/Sun.vglsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/Sun.fglsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;SkyBox&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(</highlight><highlight class="stringliteral">&quot;shaders/skybox.vglsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/skybox.fglsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5Geometry&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(</highlight><highlight class="stringliteral">&quot;shaders/MD5Geometryv.glsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/MD5Geometryf.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(</highlight><highlight class="stringliteral">&quot;shaders/ShadowMappingv.glsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/ShadowMappingf.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5ShadowMapping&quot;</highlight><highlight class="normal">]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_shader" kindref="compound">Shader</ref>(</highlight><highlight class="stringliteral">&quot;shaders/MD5GeometryShadowv.glsl&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;shaders/ShadowMappingf.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="class_epsilon_1a78c0240886a4a651bbd68f32a8a83bcb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_epsilon_1a78c0240886a4a651bbd68f32a8a83bcb" kindref="member">Epsilon::LoadGeometry</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>World<sp/>Geometry...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>50<sp/>;<sp/>i++)</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grassPos.push_back(glm::vec3(<sp/><sp/>0<sp/>+<sp/>static_cast<sp/>&lt;float&gt;<sp/>(rand())<sp/>/(<sp/>static_cast<sp/>&lt;float&gt;<sp/>(RAND_MAX/(30-10)))<sp/><sp/>,2.0,<sp/>0<sp/>+<sp/>static_cast<sp/>&lt;float&gt;<sp/>(rand())<sp/>/(<sp/>static_cast<sp/>&lt;float&gt;<sp/>(RAND_MAX/(30-0)))<sp/>));</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>grassPos.at(i).x<sp/>&lt;&lt;<sp/>grassPos.at(i).y<sp/>&lt;&lt;<sp/>grassPos.at(i).z<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//unique_ptr&lt;Skybox&gt;<sp/>s(new<sp/>Skybox(&quot;plain&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//terrain<sp/>=<sp/>new<sp/>Terrain(&quot;materials/mountains.jpg&quot;,<sp/>&quot;mud-diffuse.jpg&quot;,<sp/>&quot;mud-normal.jpg&quot;,<sp/>&quot;awp_india_texture_4s.jpg&quot;,<sp/>1,<sp/>1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//model.push_back(Model(&quot;models/sponza.obj&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/><sp/><sp/><sp/>model.push_back(Model(&quot;models/cube.obj&quot;));</highlight></codeline>
<codeline lineno="158"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//model.push_back(Model(&quot;models/Laughing_Octopus.obj&quot;));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Resource<sp/>manager<sp/>in<sp/>epsilon<sp/>address:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rM.get()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;requestCubeMap(2,<sp/>glm::vec3(0,0,0));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;requestCubeMap(2,<sp/>glm::vec3(78.9,4.75,-64.0));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;requestModel(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">,<sp/>rM,<sp/>glm::vec3(78.0,5.25,-57),<sp/>glm::vec3(0.0621),<sp/>glm::quat(1.0,<sp/>0.0,<sp/>0.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;requestModel(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">,<sp/>rM,<sp/>glm::vec3(78.9,4.75,-64.0),<sp/>glm::vec3(8),<sp/>glm::quat(-1.0,<sp/>0.0,<sp/>-1.0,<sp/>0.0));</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;requestModel(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">,<sp/>rM,<sp/>glm::vec3(23.0,0.75,0.0),<sp/>glm::vec3(8),<sp/>glm::quat(-1.0,<sp/>0.0,<sp/>-1.0,<sp/>0.0));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>skybox<sp/>=<sp/>std::move((unique_ptr&lt;Skybox&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_skybox" kindref="compound">Skybox</ref>(</highlight><highlight class="stringliteral">&quot;plain&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>grass.push_back(<ref refid="class_grass" kindref="compound">Grass</ref>(</highlight><highlight class="stringliteral">&quot;billboardgrass0002.png&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>waterPlane<sp/>=<sp/>std::move((unique_ptr&lt;Water&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_water" kindref="compound">Water</ref>(glm::vec3(0,4.1,0),<sp/>100.0f)));<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>sun<sp/>=<sp/>std::move((shared_ptr&lt;Sun&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_sun" kindref="compound">Sun</ref>()));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap<sp/>=<sp/>std::move((unique_ptr&lt;CQuake3BSP&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_c_quake3_b_s_p" kindref="compound">CQuake3BSP</ref>()));</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap-&gt;LoadBSP((</highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;maps/&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;alley.bsp&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>m_AnimModel<sp/>=<sp/>std::move((unique_ptr&lt;MD5Model&gt;)(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_m_d5_model" kindref="compound">MD5Model</ref>()));</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>m_AnimModel-&gt;LoadModel(&quot;models/hellknight/hellknight.md5mesh&quot;);</highlight></codeline>
<codeline lineno="182"><highlight class="comment"></highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>m_AnimModel-&gt;LoadAnim(&quot;models/hellknight/walk7.md5anim&quot;);</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>m_AnimModel-&gt;LoadAnim(&quot;models/hellknight/idle2.md5anim&quot;);</highlight></codeline>
<codeline lineno="185"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>m_AnimModel-&gt;LoadModel(</highlight><highlight class="stringliteral">&quot;models/dummy.md5mesh&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>m_AnimModel-&gt;LoadAnim(</highlight><highlight class="stringliteral">&quot;models/anim.md5anim&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>m_AnimModel-&gt;LoadAnim(</highlight><highlight class="stringliteral">&quot;models/anim.md5anim&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::LoadSound(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Loading<sp/>Sound...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visible<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::Render3D(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clip)</highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shaders[&quot;Main&quot;]-&gt;Use();</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(Shaders[&quot;Main&quot;],<sp/>glm::vec3(190,-40,10),<sp/>glm::vec3(1,1,1),<sp/>glm::vec3(1,1,1)<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>terrain-&gt;RenderTerrain(Shaders[&quot;Main&quot;]);</highlight></codeline>
<codeline lineno="205"><highlight class="comment"></highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">],<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/><ref refid="class_model" kindref="compound">Model</ref><sp/>=<sp/>glm::mat4();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>ScaleMatrix<sp/>=<sp/>glm::scale(glm::mat4(),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>TranslationMatrix<sp/>=<sp/>glm::translate(glm::mat4(),<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>RotationMatrix<sp/>=<sp/>glm::toMat4(glm::normalize(rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>Model<sp/>=<sp/>TranslationMatrix<sp/>*<sp/>ScaleMatrix<sp/>*<sp/>RotationMatrix;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap-&gt;Frustum.CalculateFrustum(glm::mat4(eCamera-&gt;getProjectionMatrix()<sp/>*<sp/>eCamera-&gt;getViewMatrix()),<sp/>Model);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>visible<sp/>=<sp/>BSPMap-&gt;Frustum.BoxInFrustum(rM-&gt;getModelBoundingBox(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visible)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rM-&gt;useModel(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;no<sp/>visible&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">],<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>Model<sp/>=<sp/>glm::mat4();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>ScaleMatrix<sp/>=<sp/>glm::scale(glm::mat4(),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>TranslationMatrix<sp/>=<sp/>glm::translate(glm::mat4(),<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>RotationMatrix<sp/>=<sp/>glm::toMat4(glm::normalize(rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>Model<sp/>=<sp/>TranslationMatrix<sp/>*<sp/>ScaleMatrix<sp/>*<sp/>RotationMatrix;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap-&gt;Frustum.CalculateFrustum(glm::mat4(eCamera-&gt;getProjectionMatrix()<sp/>*<sp/>eCamera-&gt;getViewMatrix()),<sp/>Model);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>visible<sp/>=<sp/>BSPMap-&gt;Frustum.BoxInFrustum(rM-&gt;getModelBoundingBox(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visible)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rM-&gt;useModel(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;no<sp/>visible&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">],<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">),<sp/><sp/>rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>Model<sp/>=<sp/>glm::mat4();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>ScaleMatrix<sp/>=<sp/>glm::scale(glm::mat4(),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>TranslationMatrix<sp/>=<sp/>glm::translate(glm::mat4(),<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>RotationMatrix<sp/>=<sp/>glm::toMat4(glm::normalize(rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>Model<sp/>=<sp/>TranslationMatrix<sp/>*<sp/>ScaleMatrix<sp/>*<sp/>RotationMatrix;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap-&gt;Frustum.CalculateFrustum(glm::mat4(eCamera-&gt;getProjectionMatrix()<sp/>*<sp/>eCamera-&gt;getViewMatrix()),<sp/>Model);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>visible<sp/>=<sp/>BSPMap-&gt;Frustum.BoxInFrustum(rM-&gt;getModelBoundingBox(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(visible)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rM-&gt;useModel(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>&quot;no<sp/>visible&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>glCullFace(GL_FRONT);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>BSPmodel<sp/>=<sp/>glm::mat4();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glm::mat4<sp/>tmodel<sp/>=<sp/>glm::translate(glm::mat4(),<sp/>glm::vec3(-30.0,<sp/>5.0,<sp/>-120.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>sModel<sp/>=<sp/>glm::scale(glm::mat4(),<sp/>glm::vec3(0.1,<sp/>0.1,<sp/>0.1));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPmodel<sp/>=<sp/>sModel;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap-&gt;Frustum.CalculateFrustum(glm::mat4(eCamera-&gt;getProjectionMatrix()<sp/>*<sp/>eCamera-&gt;getViewMatrix()),<sp/>BSPmodel);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">],<sp/><sp/>glm::vec3(0.0,<sp/>0.0,<sp/>0.0),<sp/>glm::vec3(0.1,<sp/>0.1,<sp/>0.1),<sp/>glm::quat(0,0,0,0));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap-&gt;RenderLevel(eCamera-&gt;getPosition(),<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Main&quot;</highlight><highlight class="normal">]-&gt;getProgramID(),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5Geometry&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5Geometry&quot;</highlight><highlight class="normal">]-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;mSkinned&quot;</highlight><highlight class="normal">),<sp/>150,<sp/>GL_FALSE,<sp/>&amp;m_AnimModel-&gt;m_AnimatedBones[0][0][0]);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5Geometry&quot;</highlight><highlight class="normal">],<sp/>glm::vec3(mpos,0.75,5.5),<sp/>glm::vec3(0.1,<sp/>0.1,<sp/>0.1),<sp/>glm::quat(-1.0,<sp/>1.0,<sp/>0.0,<sp/>0.0));</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>m_AnimModel-&gt;Render(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5Geometry&quot;</highlight><highlight class="normal">]-&gt;getProgramID());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>glCullFace(GL_BACK);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::Render3D()</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">],<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;useModel(</highlight><highlight class="stringliteral">&quot;models/M33.eml&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">],<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;useModel(</highlight><highlight class="stringliteral">&quot;models/lee-perry-smith-head-scan2.eml&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">],<sp/>rM-&gt;getModelPosition(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelScale(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">),<sp/>rM-&gt;getModelRotation(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>rM-&gt;useModel(</highlight><highlight class="stringliteral">&quot;models/Tree.eml&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>glDisable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>BSPmodel<sp/>=<sp/>glm::mat4();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glm::mat4<sp/>tmodel<sp/>=<sp/>glm::translate(glm::mat4(),<sp/>glm::vec3(-30.0,<sp/>5.0,<sp/>-120.0));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>sModel<sp/>=<sp/>glm::scale(glm::mat4(),<sp/>glm::vec3(0.1,<sp/>0.1,<sp/>0.1));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPmodel<sp/>=<sp/>sModel;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap-&gt;Frustum.CalculateFrustum(glm::mat4(eCamera-&gt;getProjectionMatrix()<sp/>*<sp/>eCamera-&gt;getViewMatrix()),<sp/>BSPmodel);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">],<sp/><sp/>glm::vec3(0.0,<sp/>0.0,<sp/>0.0),<sp/>glm::vec3(0.1,<sp/>0.1,<sp/>0.1),<sp/>glm::quat(0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0));</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>BSPMap-&gt;RenderLevel(eCamera-&gt;getPosition(),<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;ShadowMapping&quot;</highlight><highlight class="normal">]-&gt;getProgramID(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_AnimModel-&gt;Update(frametime,<sp/>0.0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5ShadowMapping&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5ShadowMapping&quot;</highlight><highlight class="normal">]-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;mSkinned&quot;</highlight><highlight class="normal">),<sp/>150,<sp/>GL_FALSE,<sp/>&amp;m_AnimModel-&gt;m_AnimatedBones[0][0][0]);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5ShadowMapping&quot;</highlight><highlight class="normal">],<sp/>glm::vec3(mpos,0.75,5.5),<sp/>glm::vec3(0.1,<sp/>0.1,<sp/>0.1),<sp/>glm::quat(-1.0,<sp/>1.0,<sp/>0.0,<sp/>0.0f));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>m_AnimModel-&gt;Render(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;MD5ShadowMapping&quot;</highlight><highlight class="normal">]-&gt;getProgramID());</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//glCullFace(GL_BACK);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(int<sp/>i<sp/>=<sp/>0<sp/>;<sp/>i<sp/>&lt;<sp/>grassPos.size()<sp/>;<sp/>i++){</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Shaders[&quot;MD5ShadowMapping&quot;]-&gt;Use();</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(Shaders[&quot;MD5ShadowMapping&quot;],<sp/>grassPos.at(i),<sp/>glm::vec3(1,1,1),<sp/>glm::vec3(1.0,<sp/>1.0,<sp/>1.0));</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grass.at(0).Render(Shaders[&quot;MD5ShadowMapping&quot;]);</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>glEnable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::SetUniforms(<ref refid="class_shader" kindref="compound">Shader</ref>*&amp;<sp/>shader,<sp/>glm::vec3<sp/>position,<sp/>glm::vec3<sp/>scale,<sp/>glm::quat<sp/>rotation)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/><ref refid="class_model" kindref="compound">Model</ref><sp/>=<sp/>glm::mat4();</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>ScaleMatrix<sp/>=<sp/>glm::scale(glm::mat4(),<sp/>scale);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>TranslationMatrix<sp/>=<sp/>glm::translate(glm::mat4(),<sp/>position);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>RotationMatrix;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>RotationMatrix<sp/>=<sp/>glm::mat4(1)<sp/>*<sp/>glm::toMat4(glm::normalize(rotation));</highlight><highlight class="comment">//glm::rotate(RotationMatrix,<sp/>glm::radians(degree),<sp/>rotation);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>Model<sp/>=<sp/>TranslationMatrix<sp/>*<sp/>ScaleMatrix<sp/>*<sp/>RotationMatrix;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>MVP<sp/>=<sp/>eCamera-&gt;getProjectionMatrix()<sp/>*<sp/>eCamera-&gt;getViewMatrix()<sp/>*<sp/>Model;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;MVP&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;MVP[0][0]);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;model&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;Model[0][0]);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;view&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;eCamera-&gt;getViewMatrix()[0][0]);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>choppedView<sp/>=<sp/>glm::mat4(glm::mat3(eCamera-&gt;getViewMatrix()));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;choppedView&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;choppedView[0][0]);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;projection&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;eCamera-&gt;getProjectionMatrix()[0][0]);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix4fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;lightSpaceMatrix&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;shadowMap-&gt;getLightSpaceMatrix()[0][0]);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat3<sp/>ModelView3x3Matrix<sp/>=<sp/>glm::mat3(Model<sp/>*<sp/>eCamera-&gt;getViewMatrix());</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::mat4<sp/>NormalMatrix<sp/>=<sp/>glm::transpose(glm::inverse((Model</highlight><highlight class="comment">/*<sp/>*<sp/>eCamera-&gt;ViewMatrix*/</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix3fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;MV3x3&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;ModelView3x3Matrix[0][0]);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniformMatrix3fv(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;normalMatrix&quot;</highlight><highlight class="normal">),<sp/>1,<sp/>GL_FALSE,<sp/>&amp;NormalMatrix[0][0]);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;LightDirection&quot;</highlight><highlight class="normal">),<sp/>sun-&gt;Direction.x,<sp/>sun-&gt;Direction.y,<sp/>sun-&gt;Direction.z);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;viewPos&quot;</highlight><highlight class="normal">),<sp/><sp/>eCamera-&gt;getPosition().x,<sp/>eCamera-&gt;getPosition().y,<sp/>eCamera-&gt;getPosition().z);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;viewDir&quot;</highlight><highlight class="normal">),<sp/><sp/>eCamera-&gt;getDirection().x,<sp/>eCamera-&gt;getDirection().y,<sp/>eCamera-&gt;getDirection().z);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">),<sp/><sp/>glfwGetTime());</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform1f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;flashLight&quot;</highlight><highlight class="normal">),<sp/><sp/>flashLight);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;CameraRight&quot;</highlight><highlight class="normal">),<sp/><sp/>eCamera-&gt;getViewMatrix()[0][0],<sp/>eCamera-&gt;getViewMatrix()[1][0],<sp/>eCamera-&gt;getViewMatrix()[2][0]);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;CameraUp&quot;</highlight><highlight class="normal">),<sp/><sp/>eCamera-&gt;getViewMatrix()[0][1],<sp/>eCamera-&gt;getViewMatrix()[1][1],<sp/>eCamera-&gt;getViewMatrix()[2][1]);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(shader-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;GrassPos&quot;</highlight><highlight class="normal">),<sp/><sp/>position.x,<sp/>position.y,<sp/>position.z);</highlight></codeline>
<codeline lineno="362"><highlight class="normal">}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::Render2D(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;text-&gt;RenderText(&quot;Epsilon<sp/>Engine<sp/>Alpha<sp/>Developer<sp/>Build.<sp/>Build:<sp/>&quot;<sp/>+<sp/>Helpers::intTostring(AutoVersion::BUILD),<sp/>0.01,<sp/>0.97,<sp/>0.3,<sp/>glm::vec3(1,1,1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;text-&gt;RenderText(&quot;Speed:<sp/>&quot;<sp/>+<sp/>floatTostring(eCamera-&gt;MovementSpeed),<sp/>0.01,<sp/>0.95,<sp/>0.3,<sp/>glm::vec3(1,1,1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;text-&gt;RenderText</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>(</highlight><highlight class="stringliteral">&quot;Position:<sp/>x<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Helpers::floatTostring(this-&gt;eCamera-&gt;getPosition().x)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>y<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Helpers::floatTostring(this-&gt;eCamera-&gt;getPosition().y)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>z<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Helpers::floatTostring(this-&gt;eCamera-&gt;getPosition().z),<sp/>0.01,<sp/>0.93,<sp/>0.3,<sp/>glm::vec3(1,1,1));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;text-&gt;RenderText(std::string(normal<sp/>?<sp/>&quot;Normal<sp/>Mapping:<sp/>ON&quot;<sp/>:<sp/>&quot;Normal<sp/>Mapping:<sp/>OFF&quot;),0.01,<sp/>0.91,<sp/>0.3,<sp/>glm::vec3(1,1,1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;text-&gt;RenderText(&quot;Frame<sp/>Time:<sp/>&quot;<sp/>+<sp/>floatTostring(frametime*1000)<sp/>+<sp/>&quot;ms&quot;,<sp/>0.01,<sp/>0.89,<sp/>0.3,<sp/>glm::vec3(1,1,1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(showtext)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;text-&gt;RenderText(</highlight><highlight class="stringliteral">&quot;FPS:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>Helpers::intTostring(fps),<sp/>0.01,<sp/>0.87,<sp/>0.3,<sp/>glm::vec3(1,1,1));</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;text-&gt;RenderText(&quot;SSAO:<sp/>&quot;<sp/>+<sp/>std::string(SSAO<sp/>?<sp/>&quot;ON&quot;<sp/>:<sp/>&quot;OFF&quot;),0.01,<sp/>0.85,<sp/>0.3,<sp/>glm::vec3(1,1,1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;text-&gt;RenderText(&quot;Parallax<sp/>Mapping:<sp/>&quot;<sp/>+<sp/>std::string(parallax<sp/>?<sp/>&quot;ON&quot;<sp/>:<sp/>&quot;OFF&quot;),0.01,<sp/>0.83,<sp/>0.3,<sp/>glm::vec3(1,1,1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::Clock()</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>etime<sp/>=<sp/>glfwGetTime();</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>frametime<sp/>=<sp/>etime<sp/>-<sp/>lastTime;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>fps<sp/>=<sp/>1<sp/>/<sp/>frametime;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(etime<sp/>&gt;<sp/>t)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fpss<sp/>&lt;&lt;<sp/>fps;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>etime<sp/>+<sp/>(double)1.000;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>eventtime<sp/>+=<sp/>1<sp/>*<sp/>frametime;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cout<sp/>&lt;&lt;<sp/>eventtime<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>sun-&gt;Update();</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::RenderSkybox(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;SkyBox&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>glUniform3f(glGetUniformLocation(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;SkyBox&quot;</highlight><highlight class="normal">]-&gt;getProgramID(),<sp/></highlight><highlight class="stringliteral">&quot;LightDirection&quot;</highlight><highlight class="normal">),<sp/>sun-&gt;Direction.x,<sp/>sun-&gt;Direction.y,<sp/>sun-&gt;Direction.z);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>skybox-&gt;Render(this-&gt;eCamera,<sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;SkyBox&quot;</highlight><highlight class="normal">],<sp/>this-&gt;exposure);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Sun&quot;</highlight><highlight class="normal">]-&gt;Use();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;SetUniforms(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Sun&quot;</highlight><highlight class="normal">],<sp/>glm::vec3(1,1,1),<sp/>glm::vec3(1,1,1),<sp/>glm::quat(0.0,<sp/>0.0,<sp/>0.0,<sp/>0.0)<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>sun-&gt;Render(<ref refid="class_epsilon_1a80c03a3455fad80a7e146ebb04a8a2fd" kindref="member">Shaders</ref>[</highlight><highlight class="stringliteral">&quot;Sun&quot;</highlight><highlight class="normal">]);</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::PollEvents(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwPollEvents();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(eventtime<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_ESCAPE<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Running<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_N<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normal<sp/>=<sp/>!normal;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_F<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flashLight<sp/>=<sp/>!flashLight;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_SPACE<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SSAO<sp/>=<sp/>!SSAO;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_P<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallax<sp/>=<sp/>!parallax;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventtime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_KP_ADD<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposure<sp/>+=<sp/>0.5<sp/>*<sp/>frametime;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_KP_SUBTRACT<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exposure<sp/>-=<sp/>0.5<sp/>*<sp/>frametime;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>blend<sp/>=<sp/>glm::clamp(blend,<sp/>0.0f,<sp/>1.0f);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_RIGHT<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpos<sp/>+=<sp/>8.5<sp/>*<sp/>frametime;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AnimModel-&gt;Update(frametime,<sp/>glm::clamp(blend,<sp/>0.0f,<sp/>1.0f));</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blend<sp/>-=<sp/>3.5<sp/>*<sp/>frametime;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AnimModel-&gt;Update(frametime,<sp/>glm::clamp(blend,<sp/>0.0f,<sp/>1.0f));</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blend<sp/>+=<sp/>0.6<sp/>*<sp/>frametime;</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpos<sp/>+=<sp/>8.5<sp/>*<sp/>frametime<sp/>*<sp/>(1<sp/>-<sp/>glm::clamp(blend,<sp/>0.0f,<sp/>1.0f));</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_UP<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mpos<sp/>+=<sp/>8.5<sp/>*<sp/>frametime;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AnimModel-&gt;Update(frametime,<sp/>glm::clamp(blend,<sp/>0.0f,<sp/>1.0f));</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blend<sp/>-=<sp/>3.5<sp/>*<sp/>frametime;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_AnimModel-&gt;Update(frametime,<sp/>glm::clamp(blend,<sp/>0.0f,<sp/>1.0f));</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blend<sp/>+=<sp/>0.6<sp/>*<sp/>frametime;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mpos<sp/>+=<sp/>8.5<sp/>*<sp/>frametime<sp/>*<sp/>(1<sp/>-<sp/>glm::clamp(blend,<sp/>0.0f,<sp/>1.0f));</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(glfwGetKey(window,<sp/>GLFW_KEY_O<sp/>)<sp/>==<sp/>GLFW_PRESS)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showtext<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showtext<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::MainLoop(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(Running)</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ClearBuffers();</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;Clock();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;PollEvents();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;eCamera-&gt;Update(this-&gt;window);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;eCamera-&gt;setPosition(glm::vec3(mpos+15,10.75,30.5));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;eCamera-&gt;setDirection(glm::vec3(0.0f,0.0f,-1.0f));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;eCamera-&gt;UpdateMatrices();</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ComputeWater();</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ComputeShadow();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;ProcessFrame();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;RenderFrame();</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;Render2D();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SwapBuffers();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::SwapBuffers(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>glfwSwapBuffers(this-&gt;window);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>lastTime<sp/>=<sp/>etime;</highlight></codeline>
<codeline lineno="510"><highlight class="normal">}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::ClearBuffers(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="class_epsilon_1abbabb1ab313440119a0ff1741d52d4ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_epsilon_1abbabb1ab313440119a0ff1741d52d4ca" kindref="member">Epsilon::ComputeWater</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;waterPlane-&gt;GenerateReflection(this-&gt;eCamera);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>distance<sp/>=<sp/>2<sp/>*<sp/>(this-&gt;eCamera-&gt;getPosition().y<sp/>-<sp/>this-&gt;waterPlane-&gt;position.y);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;eCamera-&gt;setPosition(glm::vec3(this-&gt;eCamera-&gt;getPosition().x,<sp/>this-&gt;eCamera-&gt;getPosition().y<sp/>-<sp/>distance,<sp/>this-&gt;eCamera-&gt;getPosition().z));</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;eCamera-&gt;setDirection(glm::vec3(this-&gt;eCamera-&gt;getDirection().x,<sp/>this-&gt;eCamera-&gt;getDirection().y<sp/>*<sp/>-1,<sp/>this-&gt;eCamera-&gt;getDirection().z));</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;eCamera-&gt;UpdateMatrices();</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Render3D(-1);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;RenderSkybox();</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;eCamera-&gt;setPosition(glm::vec3(this-&gt;eCamera-&gt;getPosition().x,<sp/>this-&gt;eCamera-&gt;getPosition().y<sp/>+<sp/>distance,<sp/>this-&gt;eCamera-&gt;getPosition().z));</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;eCamera-&gt;setDirection(glm::vec3(this-&gt;eCamera-&gt;getDirection().x,<sp/>this-&gt;eCamera-&gt;getDirection().y<sp/>*<sp/>-1,<sp/>this-&gt;eCamera-&gt;getDirection().z));</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;waterPlane-&gt;FinishWatercomputation();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;waterPlane-&gt;GenerateRefraction(this-&gt;eCamera);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;eCamera-&gt;UpdateMatrices();</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Render3D(1);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;RenderSkybox();</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;waterPlane-&gt;FinishWatercomputation();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::ComputeShadow()</highlight></codeline>
<codeline lineno="545"><highlight class="normal">{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::vec3<sp/>camPos<sp/>=<sp/>eCamera-&gt;getPosition();</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>glm::vec3<sp/>camDir<sp/>=<sp/>eCamera-&gt;getDirection();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowMap-&gt;setShadowPosition(glm::vec3(camPos.x<sp/>+<sp/>camDir.x<sp/>*<sp/>30,<sp/>camPos.y<sp/>+<sp/>45.0f,<sp/>camPos.z<sp/>+<sp/>camDir.z<sp/>*<sp/>30));</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowMap-&gt;setShadowDirection(sun-&gt;Direction);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowMap-&gt;SetupShadowMatrices();</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowMap-&gt;BindShadowFrameBuffer();</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Render3D();</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>shadowMap-&gt;UnbindShadowFrameBuffer();</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::ProcessFrame(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>PP-&gt;beginOffScreenrendering();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;Render3D(0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>PP-&gt;endOffScreenRendering();</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(this-&gt;SSAO)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PP-&gt;applySSAO(this-&gt;eCamera);</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Epsilon::RenderFrame(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>glViewport(0,0,<sp/>this-&gt;<ref refid="class_epsilon_1ad005199e74a13e0fc6dc1eb47416f073" kindref="member">WIDTH</ref>,<sp/>this-&gt;HEIGHT);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>PP-&gt;ShowFrame(sun-&gt;Direction,<sp/>SSAO,<sp/>this-&gt;eCamera,<sp/>exposure,<sp/>this-&gt;shadowMap);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;RenderSkybox();</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>PP-&gt;ShowPostProcessImage(exposure,<sp/>shadowMap-&gt;getShadowTextureID());</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="D:/Epsilon/Epsilon Engine/src/Epsilon.cpp"/>
  </compounddef>
</doxygen>
