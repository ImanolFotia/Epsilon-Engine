<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_physics_1_1_physics" kind="class" language="C++" prot="public">
    <compoundname>Physics::Physics</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_physics_1_1_physics_1a2673bbfa65758410f0f59b634d29a74d" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; btDynamicsWorld &gt;</type>
        <definition>std::shared_ptr&lt;btDynamicsWorld&gt; Physics::Physics::world</definition>
        <argsstring></argsstring>
        <name>world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="38" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Physics.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_physics_1_1_physics_1a3a41a46b0d97a35e65f0230ff6b417a0" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; btDispatcher &gt;</type>
        <definition>std::shared_ptr&lt;btDispatcher&gt; Physics::Physics::dispatcher</definition>
        <argsstring></argsstring>
        <name>dispatcher</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="39" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Physics.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_physics_1_1_physics_1abfab6c229512877ff6440656e92d75cd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; btCollisionConfiguration &gt;</type>
        <definition>std::shared_ptr&lt;btCollisionConfiguration&gt; Physics::Physics::collisionConfig</definition>
        <argsstring></argsstring>
        <name>collisionConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="40" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Physics.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_physics_1_1_physics_1aedd523a6223a65b5563d37b136b30aa6" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; btBroadphaseInterface &gt;</type>
        <definition>std::shared_ptr&lt;btBroadphaseInterface&gt; Physics::Physics::broadphase</definition>
        <argsstring></argsstring>
        <name>broadphase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="41" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Physics.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_physics_1_1_physics_1a2927601ab8bb0bc242e28b180086050c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; btConstraintSolver &gt;</type>
        <definition>std::shared_ptr&lt;btConstraintSolver&gt; Physics::Physics::solver</definition>
        <argsstring></argsstring>
        <name>solver</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="42" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Physics.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_physics_1_1_physics_1a7ec318429a60925c5f7283edc7c1462d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Physics::Physics::Physics</definition>
        <argsstring>()</argsstring>
        <name>Physics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="17" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physics_1_1_physics_1a84674c7c1a7a79f4fc1e3438c435c3a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Physics::Physics::~Physics</definition>
        <argsstring>()</argsstring>
        <name>~Physics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="19" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Physics.h" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_physics_1_1_physics_1a4b2969a4b6bfde1ebd56d3fd824cd729" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Physics::Physics::Update</definition>
        <argsstring>(float)</argsstring>
        <name>Update</name>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physics_1_1_physics_1a27337f2df9913db1fff2f262568e1d00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Physics::Physics::addCube</definition>
        <argsstring>(float, float, float)</argsstring>
        <name>addCube</name>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="26" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physics_1_1_physics_1a92f826ef7f8a2cf8f52d09267950e863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Physics::Physics::addSphere</definition>
        <argsstring>(float)</argsstring>
        <name>addSphere</name>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="28" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physics_1_1_physics_1ad4a6f190dbd8049f4163a8985d8746fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Physics::Physics::addCone</definition>
        <argsstring>(float, float, float)</argsstring>
        <name>addCone</name>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="30" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physics_1_1_physics_1a1c3d9c44f136dce846499748d1fd4afa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Physics::Physics::addCylinder</definition>
        <argsstring>(float, float, float)</argsstring>
        <name>addCylinder</name>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physics_1_1_physics_1a47eb3b7dda5a6ce6afdee1eec83c6673" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Physics::Physics::addTriangleMesh</definition>
        <argsstring>(std::vector&lt; glm::vec3 &gt;)</argsstring>
        <name>addTriangleMesh</name>
        <param>
          <type>std::vector&lt; glm::vec3 &gt;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="34" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="D:/Epsilon/Epsilon Engine/include/Physics.h" line="15" column="1" bodyfile="D:/Epsilon/Epsilon Engine/include/Physics.h" bodystart="14" bodyend="46"/>
    <listofallmembers>
      <member refid="class_physics_1_1_physics_1ad4a6f190dbd8049f4163a8985d8746fc" prot="public" virt="non-virtual"><scope>Physics::Physics</scope><name>addCone</name></member>
      <member refid="class_physics_1_1_physics_1a27337f2df9913db1fff2f262568e1d00" prot="public" virt="non-virtual"><scope>Physics::Physics</scope><name>addCube</name></member>
      <member refid="class_physics_1_1_physics_1a1c3d9c44f136dce846499748d1fd4afa" prot="public" virt="non-virtual"><scope>Physics::Physics</scope><name>addCylinder</name></member>
      <member refid="class_physics_1_1_physics_1a92f826ef7f8a2cf8f52d09267950e863" prot="public" virt="non-virtual"><scope>Physics::Physics</scope><name>addSphere</name></member>
      <member refid="class_physics_1_1_physics_1a47eb3b7dda5a6ce6afdee1eec83c6673" prot="public" virt="non-virtual"><scope>Physics::Physics</scope><name>addTriangleMesh</name></member>
      <member refid="class_physics_1_1_physics_1aedd523a6223a65b5563d37b136b30aa6" prot="private" virt="non-virtual"><scope>Physics::Physics</scope><name>broadphase</name></member>
      <member refid="class_physics_1_1_physics_1abfab6c229512877ff6440656e92d75cd" prot="private" virt="non-virtual"><scope>Physics::Physics</scope><name>collisionConfig</name></member>
      <member refid="class_physics_1_1_physics_1a3a41a46b0d97a35e65f0230ff6b417a0" prot="private" virt="non-virtual"><scope>Physics::Physics</scope><name>dispatcher</name></member>
      <member refid="class_physics_1_1_physics_1a7ec318429a60925c5f7283edc7c1462d" prot="public" virt="non-virtual"><scope>Physics::Physics</scope><name>Physics</name></member>
      <member refid="class_physics_1_1_physics_1a2927601ab8bb0bc242e28b180086050c" prot="private" virt="non-virtual"><scope>Physics::Physics</scope><name>solver</name></member>
      <member refid="class_physics_1_1_physics_1a4b2969a4b6bfde1ebd56d3fd824cd729" prot="public" virt="non-virtual"><scope>Physics::Physics</scope><name>Update</name></member>
      <member refid="class_physics_1_1_physics_1a2673bbfa65758410f0f59b634d29a74d" prot="private" virt="non-virtual"><scope>Physics::Physics</scope><name>world</name></member>
      <member refid="class_physics_1_1_physics_1a84674c7c1a7a79f4fc1e3438c435c3a2" prot="public" virt="non-virtual"><scope>Physics::Physics</scope><name>~Physics</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
