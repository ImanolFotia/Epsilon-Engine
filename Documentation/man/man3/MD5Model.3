.TH "MD5Model" 3 "Wed Mar 6 2019" "Version 1.0" "Epsilon Engine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
MD5Model \- 
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBJoint\fP"
.br
.ti -1c
.RI "struct \fBJointDrawInfo\fP"
.br
.ti -1c
.RI "struct \fBJointInfo\fP"
.br
.ti -1c
.RI "struct \fBMesh\fP"
.br
.ti -1c
.RI "struct \fBSkeleton\fP"
.br
.ti -1c
.RI "struct \fBTriangle\fP"
.br
.ti -1c
.RI "struct \fBVertex\fP"
.br
.ti -1c
.RI "struct \fBWeight\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBLoadModel\fP (const std::string &filename)"
.br
.ti -1c
.RI "bool \fBLoadAnim\fP (const std::string &filename)"
.br
.ti -1c
.RI "void \fBUpdate\fP (float fDeltaTime, float blend)"
.br
.ti -1c
.RI "void \fBRender\fP (GLuint shader)"
.br
.ti -1c
.RI "void \fBRenderSkeleton\fP ()"
.br
.ti -1c
.RI "void \fBRenderJoints\fP ()"
.br
.ti -1c
.RI "glm::vec3 \fBgetJointPositionByName\fP (std::string jointName)"
.br
.ti -1c
.RI "std::vector< glm::mat4 > \fBGetAnimatedSkeletonMatrix\fP ()"
.br
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "std::vector< glm::mat4 > \fBSkeletonMatrix\fP"
.br
.ti -1c
.RI "MatrixList \fBm_AnimatedBones\fP"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef std::vector< glm::vec3 > \fBPositionBuffer\fP"
.br
.ti -1c
.RI "typedef std::vector< glm::vec3 > \fBNormalBuffer\fP"
.br
.ti -1c
.RI "typedef std::vector< glm::vec3 > \fBTangentBuffer\fP"
.br
.ti -1c
.RI "typedef std::vector< glm::vec3 > \fBBinormalBuffer\fP"
.br
.ti -1c
.RI "typedef std::vector< glm::vec2 > \fBTex2DBuffer\fP"
.br
.ti -1c
.RI "typedef std::vector< glm::vec4 > \fBWeightBuffer\fP"
.br
.ti -1c
.RI "typedef std::vector< glm::vec4 > \fBBoneIndexBuffer\fP"
.br
.ti -1c
.RI "typedef std::vector< GLuint > \fBIndexBuffer\fP"
.br
.ti -1c
.RI "typedef std::vector< \fBVertex\fP > \fBVertexList\fP"
.br
.ti -1c
.RI "typedef std::vector< \fBTriangle\fP > \fBTriangleList\fP"
.br
.ti -1c
.RI "typedef std::vector< \fBWeight\fP > \fBWeightList\fP"
.br
.ti -1c
.RI "typedef std::vector< \fBJoint\fP > \fBJointList\fP"
.br
.ti -1c
.RI "typedef std::vector< \fBMesh\fP > \fBMeshList\fP"
.br
.ti -1c
.RI "typedef std::vector< glm::mat4x4 > \fBMatrixList\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "bool \fBPrepareMesh\fP (\fBMesh\fP &mesh)"
.br
.ti -1c
.RI "bool \fBPrepareMesh\fP (\fBMesh\fP &mesh, const std::vector< glm::mat4x4 > &skel)"
.br
.ti -1c
.RI "bool \fBPrepareNormals\fP (\fBMesh\fP &mesh)"
.br
.ti -1c
.RI "bool \fBPrepareVAO\fP (\fBMesh\fP &mesh)"
.br
.ti -1c
.RI "void \fBPrepareSkeletonVAO\fP ()"
.br
.ti -1c
.RI "bool \fBCalcTangentSpace\fP (\fBMesh\fP &mesh)"
.br
.ti -1c
.RI "void \fBBuildBindPose\fP (const JointList &joints)"
.br
.ti -1c
.RI "void \fBRenderMesh\fP (const \fBMesh\fP &mesh, GLuint shader)"
.br
.ti -1c
.RI "void \fBRenderNormals\fP (const \fBMesh\fP &mesh)"
.br
.ti -1c
.RI "void \fBRenderSkeleton\fP (const JointList &joints)"
.br
.ti -1c
.RI "bool \fBCheckAnimation\fP (const \fBMD5Animation\fP &animation) const "
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "int \fBm_iMD5Version\fP"
.br
.ti -1c
.RI "int \fBm_iNumJoints\fP"
.br
.ti -1c
.RI "int \fBm_iNumMeshes\fP"
.br
.ti -1c
.RI "bool \fBm_bHasAnimation\fP"
.br
.ti -1c
.RI "JointList \fBm_Joints\fP"
.br
.ti -1c
.RI "MeshList \fBm_Meshes\fP"
.br
.ti -1c
.RI "MatrixList \fBm_BindPose\fP"
.br
.ti -1c
.RI "MatrixList \fBm_InverseBindPose\fP"
.br
.ti -1c
.RI "glm::mat4x4 \fBm_LocalToWorldMatrix\fP"
.br
.ti -1c
.RI "std::vector< \fBMD5Animation\fP > \fBm_Animations\fP"
.br
.ti -1c
.RI "std::vector< \fBSkeleton\fP > \fBm_Skeletons\fP"
.br
.ti -1c
.RI "\fBJointDrawInfo\fP \fBm_JointDrawInfo\fP"
.br
.ti -1c
.RI "\fBMD5Animation::FrameSkeleton\fP \fBfinalskeleton\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 12 of file MD5_Model\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "bool MD5Model::PrepareVAO (\fBMesh\fP & mesh)\fC [protected]\fP"
std::cout << 'VBO Loaded' << std::endl; 
.PP
Definition at line 467 of file MD5_Model\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Epsilon Engine from the source code\&.
